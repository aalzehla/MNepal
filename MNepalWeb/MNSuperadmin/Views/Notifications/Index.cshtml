@model MNSuperadmin.Models.Notifications.NotificationModel


@{
    ViewBag.Title = "Push Notification";
}

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Push Notification
        @*<small>Registration</small>*@
    </h1>
    <ol class="breadcrumb">
        <li><a><i class="fa fa-bell"></i>Notification</a></li>
        <li class="active"> Push Notification</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        @using (Html.BeginForm("PushNotifications", "Notifications", FormMethod.Post, new { enctype = "multipart/form-data", @id = "Notification", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            if (this.ViewData["registration_message"] != null)
            {
                if (this.ViewData["message_class"].ToString() == "success_info")
                {
                    <div class="alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <h4>Success</h4> @this.ViewData["registration_message"]
                    </div>
                }
                else
                {
                    <div class="alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <h4>Error</h4> @this.ViewData["registration_message"]
                    </div>
                }
            }

            <!-- Start -->
            <div class="col-xs-10">

                <div class="box box-info" style="display:none;">
                    <div class="box-header with-border">
                        <h3 class="box-title">Information</h3>
                    </div>
                </div>
                <!-- /.box -->

                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Push Notification</h3>
                    </div>
                    <!-- /.box-header -->

                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">Title:<b style="color:red;">*</b></label>
                                    <div class="col-sm-9">
                                        <textarea class="form-control" rows="2" cols="50" id="title" name="txtTitle" maxlength="100" placeholder="Notification Title"></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">Notification Message:<b style="color:red;">*</b></label>
                                    <div class="col-sm-9">
                                        <textarea class="form-control" rows="5" cols="50" id="notificationMessage" name="txtNotificationMessage" placeholder="Notification Message" maxlength="500" required></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*<div class="row">
                                <div class="col-md-10">
                                    <div class="form-group">
                                        <label class="control-label col-sm-3">Extra Information:<b style="color:red;">*</b></label>
                                        <div class="col-sm-9">
                                            <textarea class="form-control" rows="2" cols="50" id="extraInformation" name="txtExtraInformation" placeholder="Extra Information" maxlength="500" required></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>*@

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">Notification Image:<b style="color:red;">*</b></label>
                                    <div class="col-sm-9">
                                        <input type="file" name="imgupload" id="imgupload" class="file-loading" required />
                                        <label id="errorLabel" style="color:red"> </label>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <!-- /.box-body -->

                        <div class="box-footer">
                            <input type="submit" class="btn btn-primary" name="btnCommand" onclick="return CheckImageSize()" value="Submit" id="btnSubmit" />
                        </div>
                        <!-- /.box-footer -->
                    </div>
                    <!-- /.box -->
                    <!-- /.box-body -->
                </div>
                <!-- col-xs-10-->
                <!-- End-->
            </div>
        }

    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
<!-- =============================================== -->

@section scripts {

    <!-- Load jQuery and the validate plugin -->
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>

    <!-- jQuery Form Validation code -->

    <script type="text/javascript">
        function isAlphabateDot(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 46) || (charCode > 46 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127) || (charCode > 47 && charCode < 58)) {

                return false;
            }
            return true;
        }


        function isNumberKey(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        function CheckImageSize() {
            var fileUpload = document.getElementById("imgupload");
            var errorLabel = document.getElementById("errorLabel");
            var fileName = fileUpload.value;
            var ext = fileName.substr(fileName.lastIndexOf('.') + 1).toLowerCase();
                if (!(ext == "jpeg" || ext == "jpg" || ext == "png")) {
                        errorLabel.innerHTML = "Invalid image file, must select a *.jpeg, *.jpg, or *.png file.";
                        return false;
                }
                if (fileUpload.fileSize == -1) {
                     errorLabel.innerHTML = "Couldn't load image file size.  Please try to save again.";
                    return false;
                    }
                else if (fileUpload.fileSize <= 1048576) {
                errorLabel.innerHTML = "";
                return true;
                    }
                else {
        var fileSize = (fileUpload.fileSize / 1048576);
        errorLabel.innerHTML = "File is too large, must select file under 1 Mb.";
        return false;
                }
        }


        $('#btnSubmit').click(function (e) {
            debugger;
             var notificationTitile = $("[name='txtTitle']").val();
            var notificationMessage = $("[name='txtNotificationMessage']").val();
            //var extraInformation = $("[name='txtExtraInformation']").val();
            event.preventDefault();

             var formData = new FormData();
             var files = $("#imgupload").get(0).files;

            formData.append("file", files[0]);
            formData.append("title", notificationTitile);
            formData.append("text", notificationMessage);
            formData.append("NotificationsImage", files[0].name);


            if (notificationTitile == "") {
                $("#check").html("");
            }
            var redirectUrlLink = '@Url.Action("GetAllPushNotifications", "Notifications")';

            if (notificationTitile != "" || notificationMessage != "" /*|| extraInformation != ""*/) {
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: '@Url.Action("PushNotifications", "Notifications")',
                    data: formData,
                    contentType: false,
                    processData: false,


                    success: function (data, textStatus) {
                        var markup = data;
                        debugger;
                        if (data.responseText == "Success") {
                            window.location.href = redirectUrlLink;
                            $("#check").html("");
                            $("#check").css("color", "green");
                            $("#check").html("Valid").show();
                        }
                        else {
                            $("#check").html("");
                            $("#check").css("color", "red");
                            $("#check").html(markup).show();
                        }
                    },
                    error: function () {
                        alert("Error occurred");
                    }
                });
            }
            else
            {
                $('#Notification').bootstrapValidator('enableFieldValidators', 'txtUserName', true);
            }
        });


    $(document).ready(function () {


        /**Validation Check */
        $('#Notification').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                txtTitle: {
                    validators: {
                        notEmpty: {
                            message: 'The UserName is required and cannot be empty'
                        }
                    }

                },
                txtNotificationMessage: {
                    validators: {
                        notEmpty: {
                            message: 'The UserName is required and cannot be empty'
                        }
                    }

                },
                txtExtraInformation: {
                    validators: {
                        notEmpty: {
                            message: 'The UserName is required and cannot be empty'
                        }
                    }

                },
            }
        });

        });
    </script>
}

