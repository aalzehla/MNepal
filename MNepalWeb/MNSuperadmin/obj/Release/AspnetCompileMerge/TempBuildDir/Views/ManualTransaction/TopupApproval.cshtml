@model MNSuperadmin.ViewModel.MerchantVM

@{
    ViewBag.Title = "Top Up Manual Transaction";
    List<SelectListItem> Status = new List<SelectListItem>();
}


<link href="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Manual Transaction
        <small>Top Up Approval</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i>Manual Transaction</a></li>
        <li class="active">Top Up Approval</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        <!-- Start -->
        <div class="col-xs-12">

            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Top Up Approval</h3>
                </div>
                <!-- /.box-header -->
                @if (this.TempData["TopUp_ManualTran_messsage"] != null)
                {
                if (this.TempData["message_class"].ToString() == "success_info")
                {
                <div class="alert alert-success">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4>Success</h4> @this.TempData["TopUp_ManualTran_messsage"]
                </div>
                }
                else
                {
                <div class="alert alert-danger">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4>Error</h4> @this.TempData["TopUp_ManualTran_messsage"]
                </div>
                }
                }
                <!--Search-->
                <div class="box-body">
                    <div class="row">

                        @*<div>
                    <hr />
                </div>*@

                        <div class="form-group" id="form">
                            <div id="dateRange">


                                <div class="form-group">
                                    <div class="col-md-2 form-group">
                                        <label>From</label>
                                        @Html.TextBoxFor(x => x.Parameter.StartDate, new { @id = "StartDate", @class = "form-control", @maxlength = "10", @placeholder = "DD/MM/YYYY" })


                                    </div>
                                    <div class="col-md-2 form-group">
                                        <label>To</label>
                                        @Html.TextBoxFor(x => x.Parameter.EndDate, new { @id = "EndDate", @class = "form-control", @maxlength = "10", @placeholder = "DD/MM/YYYY" })


                                    </div>
                                </div>

                            </div>

                            <div id="Source MobileNo" class="col-md-2 form-group">
                                <label>Mobile No</label>
                                @Html.TextBoxFor(x => x.Parameter.SourceMobileNo, new { @id = "SourceMobileNo", @class = "form-control", @maxlength = "10", pattern = @"[9][8][0-9]{8}", @onkeypress = "return isNumber(event)" })

                            </div>

                        </div>


                    </div>

                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <input type="submit" class="btn btn-primary" id="btnSearch" name="txtSearch" value="Search" />
                </div>

                <!-- /.box-footer -->
                <!-- /.box-body -->
            </div>
            <div id="data" class="box box-primary">
                <!--Report List-->
                <div class="box-body" id="grid">
                    @*<span class="fa fa-2x fa-file-excel-o pull-right" style="color:green;display:none;" title="To Excel" id="ToExcel"></span>*@
                    <table id="SearchResultTable" class="table table-striped table-bordered" style="display:none">
                        <thead>
                            <tr>
                                <th style="width:100px">Date And Time</th>
                                <th style="width: 105px;">Mobile No</th>
                                <th style="width: 105px;">Topu Up Type</th>
                                <th style="width: 50px;">Amount</th>
                                <th style="width: 50px;">Reference Number</th>
                                <th style="width: 50px;">Verified By</th>
                                <th style="width: 50px;">Verified Date And Time</th>
                                <th style="width: 50px;">Action</th>
                            </tr>
                        </thead>
                        @*<tfoot>
                            <tr>
                                <td colspan="4" style="text-align:right"></td>
                                <td colspan="2" style="text-align:right"></td>
                                <td colspan="2" style="text-align:right"></td>
                            </tr>
                        </tfoot>*@
                    </table>
                </div>
                <div class="overlay" id="loading" style="display:none;">
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>

            <!--Report List-->
        </div>

    </div>
    <!-- /.col-xs--->
    <!-- End-->
    <!-- /.row -->
</section>
<!-- /.content -->
<!-- =============================================== -->
@section scripts{
    <script src="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            //test
            //$("#StartDate").datepicker().datepicker("setDate", new Date());
            //$("#EndDate").datepicker().datepicker("setDate", new Date());
            ///////




            var changed = "T";
            $('#TranID, #StartDate, #EndDate, #SourceMobileNo, #DestMobileNo').on('input propertychange paste', function () {
                changed = "T";
            });
            $('#FTType, #Status').on('change', function () {
                changed = "T";
            });
            var table;

            $('#ToExcel').click(function () {
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var SourceMobileNo = $('#SourceMobileNo').val();
                var Parachanged = changed;
                $.ajax({
                    url: "@Url.Action("EBankingTable", "ManualTransaction")",
                    data: {
                        StartDate: StartDate,
                        EndDate: EndDate,
                        SourceMobileNo: SourceMobileNo,
                        change: Parachanged,
                        ToExcel: 'T'
                    },
                    type: 'POST',
                    success: function (data) {
                        var url = "@Url.Action("Download", "ManualTransaction")";
                        window.location = url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName;
                        /*window.open(url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName, '_blank');*/
                    },
                    error: function (data) {

                    }


                });
            });
            $('#btnSearch').click(function () {
                debugger;
                changed = "T";
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var SourceMobileNo = $('#SourceMobileNo').val();
                var Parachanged = changed;
                if ($.fn.DataTable.isDataTable('#SearchResultTable')) {
                    table.destroy();
                }
                $('#loading').show();
                $('#btnSearch').prop("disabled", true);
                table = $('#SearchResultTable').DataTable({
                    "order": [[0, "desc"]],
                    searching: false,
                    proccessing: true,
                    "serverSide": true,
                    "aaSorting": [],
                    orderCellsTop: true,
                    fixedHeader: true,
                    "ajax": {
                        data: function (d) {
                            d.StartDate = StartDate,
                                d.EndDate = EndDate,
                                d.SourceMobileNo = SourceMobileNo,
                                d.change = Parachanged
                        },
                        url: "@Url.Action("TopupApprovalTable", "ManualTransaction")",
                        type: 'POST',

                    },
                    "columns": [
                        { "data": "Date" },
                        { "data": "MobNumber" },
                        { "data": "MerchantName" },
                        { "data": "Amount", render: $.fn.dataTable.render.number(',', '.', 2, ''), "sClass": "text-right" },
                        { "data": "ReferenceNo" },
                        { "data": "VerifiedBy" },
                        { "data": "VerifiedDate" },
                        

                        {
                            //  "data": "ClientCode",
                            // "data": "MobileNo",

                            "data": "ReferenceNo",
                            "render": function (data) {
                                return "<a href='../ManualTransaction/ViewTopUpVerifiedDetails?retRef=" + data + "'><i class='fa fa-eye' style='margin-left: 70px;'></i></a>"
                            }
                        },
                    ],
                    "drawCallback": function (settings) {
                        changed = "F";
                        Parachanged = changed;
                        debugger;
                        $('#SearchResultTable').show();
                        if (settings.json.recordsTotal > 0)
                            $('#ToExcel').show();
                        else
                            $('#ToExcel').hide();
                        $('#loading').hide();
                        $('#btnSearch').prop("disabled", false);

                    },
                    "footerCallback": function (row, data, start, end, display) {
                        debugger;
                        var api = this.api(), data;

                        // Remove the formatting to get integer data for summation
                        var intVal = function (i) {
                            return typeof i === 'string' ?
                                i.replace(/[\$,]/g, '') * 1 :
                                typeof i === 'number' ?
                                i : 0;
                        };
                        //  this.api().context[0].json.Sum
                        // Total over all pages
                        total = api.context[0].json.Sum;

                        // Total over this page
                        pageTotal = api
                            .column(5, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                        debugger;
                        // Update footer
                        //$(api.column(5).footer()).html(
                        //  'Total: ' + pageTotal.toFixed(2) + ' /-'
                        //);
                        $(api.column(6).footer()).html(
                        'Grand Total: ' + total.toFixed(5) + ' /-'
                      );
                    }

                });

            });

            $('#grid').on("DOMSubtreeModified", function () {
                changed = "F";
            });

            $("#StartDate").datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    maxDate: new Date,
                    onSelect: function (dateText) {
                        changed = "T";
                        var from = $('#EndDate').val().split("/");
                        if (from != "") {
                            var EDate = new Date(from[2], from[1] - 1, from[0]);
                            var to = dateText.split("/");
                            var SDate = new Date(to[2], to[1] - 1, to[0]);;
                            if (SDate > EDate) {
                                $('#EndDate').val("");
                                $('#message').text('End Date cannot be less than Start Date');
                            }
                            else {
                                $('#message').text("");
                            }
                        }
                    },
                    showAnim: "slideDown"
                });


            $("#EndDate").datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    maxDate: new Date,
                    onSelect: function (dateText) {
                        changed = "T";
                        var from = $('#StartDate').val().split("/");
                        if (from != "") {
                            var SDate = new Date(from[2], from[1] - 1, from[0]);
                            var to = dateText.split("/");
                            var EDate = new Date(to[2], to[1] - 1, to[0]);;
                            if (EDate < SDate) {
                                debugger;
                                $('#EndDate').val("");
                                $('#message').text('End Date cannot be less than Start Date');
                            }
                            else {
                                $('#message').text("");
                            }
                        }
                    },
                    showAnim: "slideDown"



                });
        });

        $(document).ready(function () {
            $.validator.addMethod("pattern", function (value, element, param) {
                if (this.optional(element)) {
                    return true;
                }
                if (typeof param === "string") {
                    param = new RegExp("^(?:" + param + ")$");
                }
                return param.test(value);
            }, "Invalid format.");

            $('#Merchantform').validate({


                highlight: function (label) {

                    $(label).closest('.form-group').addClass('has-error');
                },

                unhighlight: function (label) {
                    $(label).closest('.form-group').removeClass('has-error');
                }
                
            });
            
        });

        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
        
    </script>
}


