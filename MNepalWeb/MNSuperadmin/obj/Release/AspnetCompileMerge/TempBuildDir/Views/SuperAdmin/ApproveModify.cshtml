
@{
    ViewBag.Title = "ApproveModify";
}

@model MNSuperadmin.Models.UserInfo

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Admin
        <small>Approve Modify</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li class="active">Approve Modify</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        <!-- Start Form -->
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Approve Modify Registration</h3>
                </div>
                <!-- /.box-header -->

                @using (Html.BeginForm("ApproveModify", "Admin", FormMethod.Post, new { @id = "EditAdminForm", @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    if (this.ViewData["register_messsage"] != null)
                    {
                        if (this.ViewData["message_class"].ToString() == "success_info")
                        {
                            <div class="alert alert-success">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Success</h4> @this.ViewData["register_messsage"]
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Error</h4> @this.ViewData["register_messsage"]
                            </div>
                        }
                    }
                    <div class="box-body">

                        <div class="form-horizontal">

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.ClientCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ClientCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.ClientCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.PIN, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PIN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.PIN, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.ContactNumber1, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ContactNumber1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.ContactNumber1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.ContactNumber2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ContactNumber2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ContactNumber2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.WalletNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.WalletNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.WalletNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.BranchCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.BankNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BankNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.BankNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BankAccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsApproved, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    @if (Model.IsApproved == "Approve")
                                    {
                                        <div class="radio radio-primary">
                                            <label>
                                                <input type="radio" name="IsApproved" id="IsApproved" value="Approve" class="btn btn-success" checked /> @Model.IsApproved
                                            </label>&nbsp;
                                            <label>
                                                <input type="radio" name="IsApproved" id="IsApproved1" autocomplete="off" value="UnApprove" class="btn btn-default" /> UnApprove
                                            </label>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="radio radio-primary">
                                            <label>
                                                <input type="radio" name="IsApproved" id="IsApproved" value="Approve" class="btn btn-success" />
                                                Approve
                                            </label>&nbsp;
                                            <label>
                                                <input type="radio" name="IsApproved" id="IsApproved1" autocomplete="off" value="UnApprove" class="btn btn-default" checked />
                                                UnApprove
                                            </label>
                                        </div>
                                    }

                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.IsRejected, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.IsRejected, new SelectList(new[] {
                       new { Value = "T", Text = "T"},
                       new { Value="F",Text="F" } },
        "Value", "Text"), "--Select --", new { required = "required", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IsRejected, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                    </div>
        <!-- /. box-body-->

                    <div class="box-footer">
                        <div class="form-group col-md-10">
                            <input type="submit" class="btn btn-primary pull-right" id="btnCommand" name="btnCommand" value="Submit" />
                        </div>
                    </div>
                }

            </div>
        </div>
        <!--End Form -->

    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
@section scripts {

    <!-- Load jQuery and the validate plugin -->
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>

    <!-- jQuery Form Validation code -->

    <script type="text/javascript">
        /**Validation Check */
        $('#EditAdminForm').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                ContactNumber2: {
                    validators: {
                        integer: {
                            message: 'The value is not an integer'
                        },
                        notEmpty: {
                            message: 'The UserName is required and cannot be empty'
                        },
                        stringLength: {
                            max: 10,
                            min: 10,
                            message: 'Please Use Your Valid Mobile Number'
                        }
                    }
                },
                BankAccountNumber: {
                    validators: {
                        stringLength: {
                            max: 14,
                            min: 14,
                            message: 'The BankAccountNumber must be 14 digit numeric'
                        }
                    }
                }
            }
        });
    </script>
}

