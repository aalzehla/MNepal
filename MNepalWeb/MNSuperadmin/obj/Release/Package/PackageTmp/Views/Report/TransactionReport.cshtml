@model MNSuperadmin.ViewModel.MerchantVM
@{
    ViewBag.Title = "Transaction Report";
    List<SelectListItem> Service = new List<SelectListItem>();
    Service.Add(new SelectListItem { Text = "All", Value = "All" });
    Service.Add(new SelectListItem { Text = "Balance Enquiry", Value = "Balance Enquiry" });
    Service.Add(new SelectListItem { Text = "Balance Enquiry", Value = "Topup" });
    Service.Add(new SelectListItem { Text = "Colleges", Value = "Colleges" });
    Service.Add(new SelectListItem { Text = "Restaurants", Value = "Restaurants" });
    Service.Add(new SelectListItem { Text = "Schools", Value = "Schools" });

    List<SelectListItem> GrpByStatus = new List<SelectListItem>();
    GrpByStatus.Add(new SelectListItem { Text = "Active", Value = "Active" });
    GrpByStatus.Add(new SelectListItem { Text = "Inactive", Value = "Inactive" });
}


<link href="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Report
        <small>Agent Transaction Report</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i>Report</a></li>
        <li class="active">Agent Transaction Report</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        <!-- Start -->
        <div class="col-xs-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Agent Transaction Report</h3>
                </div>
                <!-- /.box-header -->
                <!--Search-->
                <div class="box-body">
                    <br />
                    <div class="row">

                        @*<div>
                                <hr />
                            </div>*@

                        <div class="form-group" id="form">
                            <div id="dateRange">
                                <div class="form-group">
                                    <div class="col-md-2 form-group">
                                        <label>From</label>
                                        @Html.TextBoxFor(x => x.Parameter.StartDate, new { @id = "StartDate", @class = "form-control", @maxlength = "10", @placeholder = "DD/MM/YYYY" })
                                    </div>
                                    <div class="col-md-2 form-group">
                                        <label>To</label>
                                        @Html.TextBoxFor(x => x.Parameter.EndDate, new { @id = "EndDate", @class = "form-control", @maxlength = "10", @placeholder = "DD/MM/YYYY" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div id="UserId" class="col-md-4 form-group">
                                    <label>Agent Mobile Number</label>
                                    <div class="input-group">
                                        <div class="input-group-addon">
                                            <i class="glyphicon glyphicon-phone" style="color:royalblue"></i>
                                        </div>
                                        @Html.TextBox("ContactNumber1", null, new
                                   {
                                       @placeholder = "Mobile Number",
                                       @class = "form-control",
                                       @Id = "ContactNumber1",
                                       @maxlength = 10@*, @pattern = "^[9][8][0-9]{8}$", @data_bv_regexp_message = "Mobile Number is not in valid Format"*@})
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Service</label>
                                    @Html.DropDownList("Parameter.Service", new SelectList(ViewBag.MerchantCategory, "Key", "Key"), "All", new { @class = " form-control select2", @style = "width: 100%;", @id = "ddl1" })
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Status</label>
                                    @Html.DropDownList("Parameter.GrpByDate", new SelectList(GrpByStatus, "Value", "Text"), new { @class = " form-control select2", @style = "width: 100%;", @id = "GroupBy" })
                                </div>
                            </div>
                            @*<div class="col-md-2">
                                    <div class="form-group">
                                        <label>Service Type</label>
                                        <select name="Parameter.MerchantName" id="ddl2" class="form-control select2">
                                            <option value="All">All</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>GroupBy</label>
                                        @Html.DropDownList("Parameter.GrpByDate", new SelectList(GrpByDate, "Value", "Text"), new { @class = " form-control select2", @style = "width: 100%;", @id = "GroupBy" })
                                    </div>
                                </div>*@

                        </div>


                    </div>

                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <input type="submit" class="btn btn-primary" id="btnSearch" name="txtSearch" value="Search" />
                </div>

            </div>
            <!--REPORT-->
            <div id="data" class="box box-primary">
                <!--Report List-->
                <div class="box-body" id="grid">
                    <span class="fa fa-2x fa-file-excel-o pull-right" style="color:green;display:none;" title="To Excel" id="ToExcel"></span>
                    <table id="SearchResultTable" class="table table-striped table-bordered" style="display:none">
                        <thead>

                            <tr>
                                <th style="width:100px;">Date</th>
                                <th style="width:100px;">Agent Name</th>
                                <th style="width:100px;">Agent Mobile Number</th>
                                <th style="width:155px;">Services</th>
                                <th style="width:55px;">Transaction Count</th>
                                <th style="width:55px;">Status</th>
                                <th style="width:55px;">Commission earned</th>

                            </tr>
                        </thead>
                    </table>


                </div>
                <div class="overlay" id="loading" style="display:none;">
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
                <!-- /.col-xs--->
                <!-- End-->
            </div>

        </div>
    </div>

    <div class="modal fade bs-example-modal-lg" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog  modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:red">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Transaction Detail</h4>
                </div>
                <div class="modal-body" id="modaldata">
                    <p></p>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>



    <!-- /.row -->
</section>
<!-- /.content -->
<!-- =============================================== -->

@section scripts{
    <script src="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {




            var changed = "T";
            $('#StartDate, #EndDate').on('input propertychange paste', function () {
                changed = "T";
            });
            $('#ddl1, #ddl2,#GroupBy').on('change', function () {
                changed = "T";
            });
            var table;

            $('#ToExcel').click(function () {
                debugger;
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Service = $('#ddl1').val();
                //var MerchantName = $('#ddl2').val();
                var GroupBy = $('#GroupBy').val();
                var ContactNumber = $('#ContactNumber1').val();
                var Parachanged = changed;
                $.ajax({
                    url: "@Url.Action("TransactionTable", "Report")",
                    data: {
                        StartDate: StartDate,
                        EndDate: EndDate,
                        Service: Service,
                        //MerchantName: MerchantName,
                        GroupBy: GroupBy,
                        change: Parachanged,
                        ToExcel: 'T',
                        ContactNumber:ContactNumber
                    },
                    type: 'POST',
                    success: function (data) {
                        var url = "@Url.Action("Download", "Report")";
                        window.location = url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName;
                        /*window.open(url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName, '_blank');*/
                    },
                    error: function (data) {

                    }


                });
            });
            const monthNames = ["January", "February", "March", "April", "May", "June",
                                    "July", "August", "September", "October", "November", "December"];

            var SD;
            var ED;
            var GB;

            //$.fn.dataTable.ext.errMode = 'none';

            //$('#SearchResultTable').on('error.dt', function (e, settings, techNote, message) {
            //    $('#loading').hide();
            //    $('#btnSearch').prop("disabled", false);
            //    $('#SearchResultTable').hide();
            //    if ($.fn.DataTable.isDataTable('#SearchResultTable')) {
            //        table.destroy();
            //    }
            //    var msg = message.split("-");
            //    if (msg.length > 1)
            //        alertify.error('Error : ' + msg[msg.length - 1]);
            //    else
            //        alertify.error('Error : ' + msg[msg.length - 1]);

            //})
            $('#btnSearch').click(function () {
                debugger;
                changed = "T";
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Service = $('#ddl1').val();
                var ContactNumber1 = $('#ContactNumber1').val();
                var GroupBy = $('#GroupBy').val();
                var Parachanged = changed;
                if ($.fn.DataTable.isDataTable('#SearchResultTable')) {
                    table.destroy();
                }
                $('#loading').show();
                $('#btnSearch').prop("disabled", true);
                table = $('#SearchResultTable')
                    .DataTable({
                    searching: false,
                    proccessing: true,
                    "serverSide": true,
                    "aaSorting": [],
                    orderCellsTop: true,
                    fixedHeader: true,
                    "ajax": {
                        data: function (d) {
                            d.StartDate = StartDate;
                            d.EndDate = EndDate;
                            d.Service = Service;
                            d.ContactNumber1 = ContactNumber1;
                            d.GroupBy = GroupBy;
                            d.change = Parachanged;
                        },
                        url: "@Url.Action("TransactionTable", "Report")",
                        type: 'POST',
                    },
                    //"columns": [
                    //          { "data": "ServiceType" },
                    //          { "data": "MerchantName" },
                    //           { "data": "NoOfTran" },
                    //          { "data": "TotalAmount", render: $.fn.dataTable.render.number(',', '.', 2, ''), "sClass": "text-right" },
                    //          { "data": "SalesMonth" },
                    //          { "data": "SalesYear" },
                    //          { "data": "SalesYear" },
                    //          {
                    //              "data": null,
                    //              orderable: false,
                    //              "createdCell": function (td, cellData, rowData, row, col) {
                    //                  $(td).html("<span class='fa fa-2x fa-eye' title='View Detail' data-salesMonth='" + cellData.SalesMonth + "' data-salesYear='" + cellData.SalesYear + "' data-merchantName='" + cellData.MerchantName + "'data-service='" + cellData.ServiceType + "'></span>");
                    //              }
                    //          }
                    //],
                        "drawCallback": function (settings) {
                            changed = "F";
                            Parachanged = changed;
                            $('#SearchResultTable').show();
                            if (settings.json.recordsTotal > 0)
                                $('#ToExcel').show();
                            else
                                $('#ToExcel').hide();
                            $('#loading').hide();
                            $('#btnSearch').prop("disabled", false);
                        },
                        "columns": [
                            { "data": "Date" },
                            { "data": "AgentName" },
                            { "data": "AgentMobileNumber" },
                            { "data": "Services" },
                            { "data": "TransactionCount" },
                            { "data": "Status" },
                            { "data": "CommissionEarned" }

                        ],
                     });
            });

            $('#grid').on("DOMSubtreeModified", function () {
                changed = "F";
            });

            
            $("#StartDate").datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    maxDate: new Date,
                    onSelect: function (dateText) {
                        changed = "T";
                        var from = $('#EndDate').val().split("/");
                        if (from != "") {
                            var EDate = new Date(from[2], from[1] - 1, from[0]);
                            var to = dateText.split("/");
                            var SDate = new Date(to[2], to[1] - 1, to[0]);;
                            if (SDate > EDate) {
                                $('#EndDate').val("");
                                $('#message').text('End Date cannot be less than Start Date');
                            }
                            else {
                                $('#message').text("");
                            }
                        }
                    },
                    showAnim: "slideDown"
                });

            function validateDate(StartDate,EndDate)
            {
                if(StartDate!="" && EndDate!="" )
                {
                    var From = StartDate.split("/"); //because we are displaying value in dd/mm/yyyy so we need to convert it back to mm/dd/yyyy to compare
                    var To = EndDate.split("/");
                    var Sdate = new Date(from[2], from[1] - 1, from[0]);
                    var EDate = new Date(to[2], to[1] - 1, to[0]);
                    var Today = new Date();
                    if(Sdate>EDate)
                    {
                        return false;
                    }
                    if(EndDate>Today || StartDate>Today)
                    {
                        return false;
                    }


                }

            }

            $("#EndDate").datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    maxDate: new Date,
                    onSelect: function (dateText) {
                        changed = "T";
                        var from = $('#StartDate').val().split("/");
                        if (from != "") {
                            var SDate = new Date(from[2], from[1] - 1, from[0]);
                            var to = dateText.split("/");
                            var EDate = new Date(to[2], to[1] - 1, to[0]);
                            if (EDate < SDate) {
                                debugger;
                                $('#EndDate').val("");
                                $('#message').text('End Date cannot be less than Start Date');
                            }
                            else {
                                $('#message').text("");
                            }
                        }
                    },
                    showAnim: "slideDown"



                });



            @*var ddl1val = $('#ddl1').val();

            $.ajax({
                data: { "value": ddl1val },
                url:'@Url.Action("LoadDropDownMerchants","Report")',
                    success: function (data)
                    {
                        $('#ddl2').empty();
                        $('#ddl2').html(data);
                    }
                });*@
            //   var selected = "@Model.Parameter.MerchantName";
            $('#ddl1').change(function () {

                var ddl1val = $('#ddl1').val();
                $.ajax({
                    data: { "value": ddl1val },
                    url: '@Url.Action("LoadDropDownMerchants","Report")',
                    success: function (data) {
                        $('#ddl2').empty();
                        //$('#ddl2').append('<option value="">All</option>');
                        var lst = '<option value="All">All</option>';

                        lst = lst + data;
                        $('#ddl2').html(lst);



                    }
                });

            }).change();


        });

        $(document).ready(function () {
            $.validator.addMethod("pattern", function (value, element, param) {
                if (this.optional(element)) {
                    return true;
                }
                if (typeof param === "string") {
                    param = new RegExp("^(?:" + param + ")$");
                }
                return param.test(value);
            }, "Invalid format.");



            $('#Summaryform').validate({
                highlight: function (label) {

                    $(label).closest('.form-group').addClass('has-error');
                },
                unhighlight: function (label) {
                    $(label).closest('.form-group').removeClass('has-error');
                }
            });




        });




    </script>
}



