@model MNepalWeb.Models.UserInfo

@{
    ViewBag.Title = "EditModified";
    List<SelectListItem> Status = new List<SelectListItem>();
    Status.Add(new SelectListItem { Text = "Active", Value = "Active" });
    Status.Add(new SelectListItem { Text = "Inactive", Value = "Inactive" });



}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Admin
        <small>Approve Modified Admin</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i> Admin</a></li>
        <li class="active">Approve Modified Admin</li>
        <li class="active">Update Modification</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        <!-- Start Form -->
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Update Modification</h3>
                </div>
                <!-- /.box-header -->


                
                @using (Html.BeginForm("ApproveModifyAdmin", "Admin", FormMethod.Post, new { @id = "ModifyAdminForm", @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()

                    if (this.ViewData["custapprove_messsage"] != null)
                    {
                        if (this.ViewData["message_class"].ToString() == "success_info")
                        {
                            <div class="alert alert-success">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Success</h4> @this.ViewData["custapprove_messsage"]
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Error</h4> @this.ViewData["custapprove_messsage"]
                            </div>
                        }
                    }
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-8">
                                <p>Following changes were done during modification,The changes will only take effect after approval.</p>
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-md-12">
                                @if (Model.MakerChecker.Count() > 0)
                                {
                                    <table class="table table-condensed">
                                        <thead>
                                            <tr>
                                                <th>Field</th>
                                                <th>Before</th>
                                                <th>After</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.MakerChecker)
                                            {
                                                <tr>
                                                    <td>@item.ColumnName</td>
                                                    <td style="color:red">@item.OldValue</td>
                                                    <td style="color:blue">@item.NewValue</td>
                                                </tr>

                                            }
                                            
                                            
                                        </tbody>
                                    </table>
                                    <div class="row" style="font-weight:bold;">
                                        <div class="col-md-3"> Modified by : @Model.MakerChecker[0].EditedBy </div>

                                       <div class="col-md-4">  Modified on : @Model.MakerChecker[0].EditedOn </div>
                                       
                                    </div>
                                }
                            </div>
                        </div>
                        <hr/>
                        <div class="form-horizontal">

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.ClientCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.ClientCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.ClientCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Name, new {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control",
                                       @readonly = "readonly"
                                   }
                               })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.EmailAddress, new
                               {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control",
                                       @readonly = "readonly"
                                   }
                               })
                                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger", @readonly = "readonly" })
                                </div>
                            </div>


                            <div class="form-group">

                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.DropDownListFor(model => model.Status, new SelectList(Status, "Value", "Text", Model.Status), new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-md-2">Branch Name@*<b style="color:red;">*</b>*@</label>
                                <div class="col-md-5">

                                    @Html.DropDownListFor(x => x.BranchCode, new SelectList(ViewBag.BranchName, "Value", "Text"), "Select Branch", new
                               {
                                   @class = "form-control select2",
                                   @id = "branchName",
                                   @required = "required",
                                   @readonly = "readonly",
                                   @disabled = "disabled"
                               })

                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Role @*<b style="color:red;"></b>*@
                                </label>
                                <div class="col-md-5">
                                    @Html.DropDownListFor(x => x.ProfileName, new SelectList(ViewBag.AdminProfile, "Value", "Text"), "Choose  Profile Name", new
                         {
                             @class = "form-control select2",
                             @id = "profileName",
                             @required = "required",
                             @readonly = "readonly",
                             @disabled = "disabled"

                         })





                                    @*<input type="checkbox" id="COC" name="COC" value="T" @(Model.COC.ToString() == "T" ? "Checked" : string.Empty) disabled class="hide" /> <span class="hide">Centralized Operation Contol</span>*@

                                </div>

                            </div>
                            <div>
                                <div class="col-md-10">
                                    <div class="form-group">
                                        <label class="control-label col-sm-3"> &nbsp;</label>
                                        <div class="col-sm-9">
                                            <input type="checkbox" id="COC" name="COC" value="T" @(Model.COC.ToString() == "T" ? "Checked" : string.Empty) disabled /> <span>Centralized Operation Control</span>

                                        </div>
                                    </div>
                                </div>
                            </div>



                            <div class="form-group" style="display:none;">
                                @Html.LabelFor(model => model.IsRejected, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.IsRejected, new SelectList(new[] {
                       new { Value = "T", Text = "T"},
                       new { Value="F",Text="F" } },
        "Value", "Text"), "--Select --", new { required = "required", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IsRejected, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                    </div>
        <!-- /. box-body-->

                    @*<div class="box-footer">
                            <div class="row" id="RejectRemarks" style="display:none">
                                <div class="col-md-10">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Reject Remarks <b style="color:red;">*</b></label>
                                        <div class="col-sm-6">
                                            <textarea name="Remarks" maxlength="200" rows="4" cols="50" style="min-height:50px;min-width:200px;max-height:100px;max-width:380px;" class="form-control"></textarea>
                                        </div>
                                        <div class="col-sm-2">
                                            <span class="glyphicon glyphicon-remove" id="txtremove" style="font-size:20px;color:red;" title="Hide Reject Remarks"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="btn-toolbar">
                                    <input type="submit" class="btn btn-primary pull-right" id="btnApprove" name="btnApprove" value="Approve">
                                    <button id="Reject" class="btn btn-danger pull-right">Reject</button>
                                    <input type="submit" class="btn btn-danger pull-right" id="btnReject" name="btnApprove" value="Reject" style="display:none">
                                </div>

                            </div>
                        </div>*@
                    <div class="row text-left" style="margin-left:210px">
                        <div class="col-md-10">

                            <input type="submit" class="btn btn-primary" style="text-align: center;" id="btnApprove" name="btnApprove" value="Approve">

                        </div>
                    </div>
                    <br />

                    <div id="RejectRemarks">

                        <div class="form-group">
                            <label class="control-label col-md-2">Reject Remarks <b style="color:red;">*</b></label>

                            <div class="col-md-5">
                                <textarea name="Remarks" id="txtRemarks" maxlength="200" rows="4" cols="50" style="min-height:50px;min-width:200px;max-height:100px;max-width:380px;" class="form-control"></textarea>
                                <b style="color:red">*</b><b> Note Please fill out remarks before rejecting </b>
                            </div>

                        </div>

                    </div>
                    <br />
                    <div class="row text-left" style="margin-left:210px">
                        <div class="col-md-10">

                            <input type="submit" class="btn btn-danger" id="btnReject" name="btnApprove" value="Reject">

                        </div>
                    </div>

                }

            </div>
        </div>
        <!--End Form -->

    </div>
    <!-- /.row -->
</section>

<!-- /.content -->

@section scripts {

    <!-- Load jQuery and the validate plugin -->
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>

    <!-- jQuery Form Validation code -->

    <script type="text/javascript">

       

            //$('#Reject').click(function (e) {
            //    e.preventDefault();
            //    $('#RejectRemarks').show();
            //    $('#Reject').hide();
            //    $('#btnReject').show();
            //    $('#RejectRemarks textarea').attr('required', true);
            //    $('#RejectRemarks textarea').focus();

            //});


            //$('#txtremove').click(function () {
            //    $('#RejectRemarks').hide();
            //    $('#Reject').show();
            //    $('#btnReject').hide();
            //    $('#RejectRemarks textarea').removeAttr('required');
            //});

        $(document).ready(function () {

            $('#btnApprove').click(function (e) {
                //e.preventDefault();
                document.getElementById("txtRemarks").setCustomValidity("");
            });


            $('#btnReject').click(function (e) {
                //e.preventDefault();

                if ($.trim($('#RejectRemarks textarea').val()) == "") {
                    document.getElementById("txtRemarks").setCustomValidity("Reject Remarks is required");
                    $('#RejectRemarks textarea').focus();
                    return;
                }
                else {
                    document.getElementById("txtRemarks").setCustomValidity("");
                    $('#CustomerModification').submit();
                }


            });

            $('#txtRemarks').on('keyup', function () {
                document.getElementById("txtRemarks").setCustomValidity("");
            });


        });

    </script>
}
