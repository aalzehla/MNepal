
@{
    ViewBag.Title = "AgentModify";
}

@model MNepalWeb.Models.UserInfo

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Agent
        <small>Modification</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i> Agent</a></li>
        <li class="active"> Agent Modification</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        <!-- Start -->
        <div class="col-xs-12">

            <!-- Start Data Show in Table -->
            <div class="box box-primary" id="AgentModify">
                <div class="box-header with-border">
                    <h3 class="box-title">Agent Modification</h3>
                </div>
                <!-- /.box-header -->

                @using (Html.BeginForm("AgentModify", "Agent", FormMethod.Post, new { @id = "AgentModification", @class = "AgentModification" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    if (this.ViewData["agenttmodify_messsage"] != null)
                    {
                        if (this.ViewData["message_class"].ToString() == "success_info")
                        {
                            <div class="alert alert-success">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Success</h4> @this.ViewData["agenttmodify_messsage"]
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Error</h4> @this.ViewData["agenttmodify_messsage"]
                            </div>
                        }
                    }
                    <div class="box-body">
                        <div class="row" style="display:none">
                            <div class="col-md-4 form-group">
                                <label>CClientCode</label>
                                @Html.EditorFor(model => model.ClientCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>CUserName</label>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>Name</label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>UserType</label>
                                @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>Address</label>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>EmailAddress</label>
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>MobileNo</label>
                                @Html.EditorFor(model => model.ContactNumber1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>ContactNumber2</label>
                                @Html.EditorFor(model => model.ContactNumber2, new { htmlAttributes = new { @class = "form-control",@maxlength="10" } })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>WalletNumber</label>
                                @Html.EditorFor(model => model.WalletNumber, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label col-sm-3"> BranchCode:</label>
                                    @*<input type="text" id="BranchCode" class="form-control" value="" readonly />*@
                                    @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control", @name = "txtBranchCode", @maxLength="3", @Required = "Required" } })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>BankName</label>
                                @Html.DropDownList("BankNoBin", new SelectList(ViewBag.Bank,"Value","Text",Model.BankNo), "-- Choose Bank --", new { @class = "form-control select2", @id = "BankNoBin", @required="Required"})
                            </div>
                            <div class="col-md-4 form-group">
                                <label>BankAccountNumber</label>
                                @Html.EditorFor(model => model.BankAccountNumber, new { htmlAttributes = new { @class = "form-control", @name = "txtBankAccountNumber", @maxlength ="14", @onKeyPress = "edValueKeyPress()",
                                       @onKeyUp = "edValueKeyPress()" } })

                                @*<input type="number" class="form-control" id="BankAccountNumber" name="txtBankAccountNumber" onKeyPress="edValueKeyPress()"
                                       onKeyUp="edValueKeyPress()" />*@
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>IsApproved</label>
                              
                                    <div class="radio radio-primary">
                                        <label>
                                            <input type="radio" name="IsApproved" id="IsApproved" autocomplete="off" value="Approve" checked class="btn btn-success"  /> @Model.IsApproved
                                        </label>&nbsp;
                                        <label>
                                            <input type="radio" name="IsApproved" id="IsApproved1"  value="UnApprove" class="btn btn-default" disabled  />UnApprove
                                        </label>
                                    </div>
                             
                            </div>

                            <div class="col-md-4 form-group">
                                <label>IsRejected</label>
                                @Html.DropDownListFor(model => model.IsRejected, new SelectList(new[] {
                                 new { Value = "T", Text = "T"},
                                 new { Value="F",Text="F" } },
                                 "Value", "Text"), new { required = "required", @class = "form-control",@disabled="@disabled"})
                            </div>
                        </div>

                        <div class="row" >

                            <div class="col-md-4 form-group">
                                <label>Status</label>
                                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(model => model.Status, new SelectList(new[] {
                                  new { Value = "Active", Text = "Active"},
                                  new { Value="InActive",Text="InActive" } },
                                 "Value", "Text"), new { required = "required", @class = "form-control", @disabled = "Disabled" })
                            </div>

                            <div class="col-md-8 form-group" style="display:none;">
                                <label>T-Pin</label>
                                @Html.EditorFor(model => model.PIN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary pull-right" id="btnCommand" name="btnCommand" value="Submit">
                        </div>
                    </div>
                }

            </div>
            <!-- End Data Show in Table -->

        </div>
        <!-- /.col-xs--->
        <!-- End-->

    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
<!-- =============================================== -->

@section scripts {
    <!-- Load jQuery and the validate plugin -->
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>

    <!-- jQuery Form Validation code -->

    <script type="text/javascript">
        /**Validation Check */
        $('#AgentModification').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                ContactNumber2: {
                    validators: {
                        integer: {
                            message: 'The value is not an integer'
                        },
                        stringLength: {
                            max: 10,
                            min: 10,
                            message: 'The ContactNumber2 must be phone number'
                        },
                        regexp: {
                            regexp: '^[9][8][0-9]{8}$',
                            message:"Please enter valid Phone Number"

                        }
                    }
                },
                PIN: {
                    validators: {
                        integer: {
                            message: 'The value is not an integer'
                        },
                        notEmpty: {
                            message: 'The new T-PIN is required and cannot be empty'
                        },
                        stringLength: {
                            max: 4,
                            min: 4,
                            message: 'The new T-PIN must be 4 digit numeric password'
                        }
                    }
                },
                EmailAddress: {
                    validators: {
                        regexp: {
                            regexp: /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/,
                            message: 'Email Address is not valid'
                        }
                    }
                }

            }
        });
    </script>
}