@model MNepalWeb.ViewModel.CustomerAccountActivityVM
@{
    ViewBag.Title = "ResponseReport";
}

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<style>
    #grid {
        width: auto;
        height: auto;
        overflow: scroll;
    }

</style>

<section class="content-header">
    <h1>
        Report
        <small>Customer Log</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i> Report</a></li>
        <li class="active">Customer Log</li>
    </ol>
</section>

   
   
<!-- Main content -->

        <!-- Start -->
        <div class="col-xs-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Customer Log</h3>
                </div>
                <div class="box-body">
                    <br />
                    <div class="row">
                        <div class="col-md-6">
                            <span style="color:red">@ViewBag.error</span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-4">
                                <label>From</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar" style="color:red"></i>
                                    </div>
                                    @*<input type="date" id = "StartDate" />*@
                                    @Html.TextBoxFor(x => x.Parameter.StartDate, new { @class = "form-control", @Id = "StartDate", @Required = "required", @placeholder = "DD/MM/YYYY", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label>To</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar" style="color:red"></i>
                                    </div>
                                    @*<input type="date" id="EndDate" />*@
                                    @Html.TextBoxFor(x => x.Parameter.EndDate, new { @class = "form-control", @Id = "EndDate", @Required = "required", @placeholder = "DD/MM/YYYY", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <span id="message"></span>
                    </div>
                </div>
                <div class="box-footer">
                    <input type="submit" class="btn btn-primary" id="btnSearch" name="txtSearch" value="Search" />
                </div>
            </div>
            <!--/.box -box-danger-->
            <div id="data" class="box box-primary">
                <div class="box-body" id="grid">
                   <span class="fa fa-2x fa-file-excel-o pull-right" style="color:green;display:none;" title="To Excel" id="ToExcel"></span>
                    <table id="SearchResultTable" class="table table-striped table-bordered" style="display:none;">
                        <thead>
                            <tr>
                               <th>OriginID</th> 
                               <th>OriginType</th>
                                <th>ServiceCode</th>
                                <th>SourceBankCode</th>
                                <th>SourceBranchCode</th>
                                <th>SourceAccountNo</th>
                                <th>DestBankCode</th>
                                @*<th>DestBranchCode</th>
                                <th>DestAccountNo</th>*@
                                <th>Amount</th>
                                <th>FeeId</th>
                                <th>FeeAmount</th>
                                <th>TraceNo</th>
                                <th>TranDate</th>
                                @*<th>TranTime</th>*@
                                <th>RetrievalRef</th>
                                <th>ResponseCode</th>
                                <th>ResponseDescription</th>
                                <th>Balance</th>
                                <th>AcHolderName</th>
                                @*<th>MiniStmntRec</th>*@
                                @*<th>ReversalStatus</th>*@
                                <th>TranId</th>
                            </tr>
                           
                            @*<tr class="filter">
                                    <th id="TransactionType" data-type="text">TransactionType</th>
                                    <th id="TransactionDate" data-type="num">Transaction Date Time</th>
                                    <th id="Debit" data-type="num">Debit</th>
                                    <th id="Credit" data-type="num">Credit</th>
                                    <th id="Description" data-type="text">Description</th>
                                    <th id="TranId" data-type="text">TranId</th>
                                </tr>*@
                        </thead>


                    </table>
                </div>
               
                <div class="overlay" id="loading" style="display:none;">
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>

        </div>
        <!-- /.col-xs--->
        <!-- End-->

   
<!-- =============================================== -->

@section scripts{
    <script type="text/javascript">

        $(document).ready(function () {
            var changed = "F";
            $(' #StartDate, #EndDate').on('input propertychange paste', function () {
                changed = "T";
            });



            var table;
            $('#ToExcel').click(function () {
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Parachanged = changed;
                $.ajax({
                    url: "@Url.Action("ResponseReportTable", "ResReport")",
                    data: {
                        StartDate: StartDate,
                        EndDate: EndDate,
                        change: Parachanged,
                        ToExcel: 'T'
                    },
                    type: 'POST',
                    success: function (data) {
                        var url = "@Url.Action("Download", "Report")";
                        window.location = url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName;
                        /*window.open(url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName, '_blank');*/
                    },
                    error: function (data) {

                    }


                });
            });
            $('#btnSearch').click(function () {
                //debugger;
                changed = "T";
               
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Parachanged = changed;
                if ($.fn.DataTable.isDataTable('#SearchResultTable')) {
                    table.destroy();
                }
                $('#loading').show();
                $('#btnSearch').prop("disabled", true);
                table = $('#SearchResultTable').DataTable({
                    searching: false,
                    "proccessing": true,
                    "serverSide": true,
                    "aaSorting": [],
                    "ajax": {
                        data: function (d) {
                            d.StartDate = StartDate;
                            d.EndDate = EndDate;
                            d.change = Parachanged;
                        },
                        url: "@Url.Action("ResponseReportTable", "ResReport")",
                        type: 'POST',
                    },
                    "drawCallback": function (settings) {
                        debugger;
                        changed = "F";
                        Parachanged = changed;
                        $('#SearchResultTable').show();
                        if (settings.json.recordsTotal > 0)
                            $('#ToExcel').show();
                        else
                            $('#ToExcel').hide();
                        $('#loading').hide();
                        $('#btnSearch').prop("disabled", false);
                    },
                    "columns": [   
                        { "data": "OriginID" },
                        { "data": "OriginType" },
                        { "data": "ServiceCode" },
                        { "data": "SourceBankCode" },
                        { "data": "SourceBranchCode" },
                        { "data": "SourceAccountNo" },
                        { "data": "DestBankCode" },
                        //{ "data": "DestBranchCode" },
                        //{ "data": "DestAccountNo" },
                        { "data": "Amount" },
                        { "data": "FeeId" },
                        { "data": "FeeAmount" },
                        { "data": "TraceNo" },
                        { "data": "TranDate" },
                        //{ "data": "TranTime" },
                        { "data": "RetrievalRef" },
                        { "data": "ResponseCode" },
                        { "data": "ResponseDescription" },
                        { "data": "Balance" },
                        { "data": "AcHolderName" },
                        //{ "data": "MiniStmntRec" },
                        //{ "data": "ReversalStatus" },
                        { "data": "TranId" }

                       
                    ]

                });
               //table.columns.adjust();
            });

            $('#grid').on("DOMSubtreeModified", function () {
                changed = "F";
            });
            $("#StartDate").datepicker(
              {
                  dateFormat: 'dd/mm/yy',
                  maxDate: new Date,
                  onSelect: function (dateText) {
                      changed = "T";
                      var from = $('#EndDate').val().split("/");
                      if (from != "") {
                          var EDate = new Date(from[2], from[1] - 1, from[0]);
                          var to = dateText.split("/");
                          var SDate = new Date(to[2], to[1] - 1, to[0]);;
                          if (SDate > EDate) {
                              $('#EndDate').val("");
                              $('#message').text('End Date cannot be less than Start Date');
                          }
                          else {
                              $('#message').text("");
                          }
                      }
                  },
                  showAnim: "slideDown"
                });

            $("#EndDate").datepicker(
             {
                 dateFormat: 'dd/mm/yy',
                 maxDate: new Date,
                 onSelect: function (dateText) {
                     changed = "T";
                     var from = $('#StartDate').val().split("/");
                     if (from != "") {
                         var SDate = new Date(from[2], from[1] - 1, from[0]);
                         var to = dateText.split("/");
                         var EDate = new Date(to[2], to[1] - 1, to[0]);;
                         if (EDate < SDate) {
                             debugger;
                             $('#EndDate').val("");
                             $('#message').text('End Date cannot be less than Start Date');
                         }
                         else {
                             $('#message').text("");
                         }
                     }
                 },
                 showAnim: "slideDown"

             });



            ///**Validation Check */
            //$('#CusReport').bootstrapValidator({
            //    feedbackIcons: {
            //        valid: 'glyphicon glyphicon-ok',
            //        invalid: 'glyphicon glyphicon-remove',
            //        validating: 'glyphicon glyphicon-refresh'
            //    }
            //    //fields: {
            //    //    UserName: {
            //    //        validators: {
            //    //            stringlength: {
            //    //                min: 10,
            //    //                max: 10,
            //    //                message: 'Please enter valid Mobile No'

            //    //            },
            //    //            regexp: {
            //    //                regexp: //,
            //    //                message: 'Mobile no must start with 98 and should be 10 digits'

            //    //            }
            //    //        }
            //    //    }


            //    //}

          
        });


          

 
    </script>
}

