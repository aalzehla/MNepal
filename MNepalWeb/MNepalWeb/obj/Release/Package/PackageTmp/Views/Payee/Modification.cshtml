
@{
    ViewBag.Title = "Modification";
}

@model MNepalWeb.Models.UserInfo
<!-- =============================================== -->
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Merchant
        <small>Modification</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i> Merchant</a></li>
        <li class="active"> Merchant Modification</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        <!-- Start -->
        <div class="col-xs-12">

            <!-- Start Data Show in Table -->
            <div class="box box-primary" id="CustomerModify">
                <div class="box-header with-border">
                    <h3 class="box-title">Merchant Modification</h3>
                </div>
                <!-- /.box-header -->

                @using (Html.BeginForm("Modification", "Payee", FormMethod.Post, new { @id = "MerchantModification",
                    @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    if (this.ViewData["merchant_messsage"] != null)
                    {
                        if (this.ViewData["message_class"].ToString() == "success_info")
                        {
                            <div class="alert alert-success">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Success</h4> @this.ViewData["merchant_messsage"]
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <h4>Error</h4> @this.ViewData["merchant_messsage"]
                            </div>
                        }
                    }
                    <div class="box-body">
                        <div class="row" style="display:none">
                            <div class="col-md-4 form-group">
                                <label>CClientCode</label>
                                @Html.EditorFor(model => model.ClientCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>CUserName</label>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>Name</label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>UserType</label>
                                @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>Address</label>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>Status</label>
                                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@

                                @Html.DropDownListFor(model => model.Status, new SelectList(new[] {
                       new { Value = "Active", Text = "Active"},
                       new { Value="InActive",Text="InActive" } },
                       "Value", "Text"), "--Select --", new { required = "required", @class = "form-control" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>ContactNumber1</label>
                                @Html.EditorFor(model => model.ContactNumber1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="col-md-4 form-group">
                                <label>ContactNumber2</label>
                                @Html.EditorFor(model => model.ContactNumber2, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>WalletNumber</label>
                                @Html.EditorFor(model => model.WalletNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label col-sm-3"> BranchCode:</label>
                                    @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @*<input type="text" id="BranchCode" name="txtBranchCode" class="form-control" value="" readonly />*@
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>BankName</label>
                                @Html.EditorFor(model => model.BankNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @*<input type="text" id="BankNo" name="BankNo" class="form-control" />*@
                            </div>
                            <div class="col-md-4 form-group">
                                <label>BankAccountNumber</label>
                                @Html.EditorFor(model => model.BankAccountNumber, new { htmlAttributes = new { @class = "form-control",
                               @onKeyPress = "edValueKeyPress()",
                                       @onKeyUp = "edValueKeyPress()"
                           } })
                                @*<input type="number" class="form-control" id="BankAccountNumber" name="txtBankAccountNumber" onKeyPress="edValueKeyPress()" 
                                       onKeyUp="edValueKeyPress()" />*@
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label>IsApproved</label>

                                
                                @if (Model.IsApproved == "Approve")
                                {
                                    <div class="radio radio-primary">
                                        <label>
                                            <input type="radio" name="IsApproved" id="IsApproved" value="Approve" class="btn btn-success" checked />@Model.IsApproved
                                        </label>&nbsp;
                                        <label>
                                            <input type="radio" name="IsApproved" id="IsApproved1" autocomplete="off" value="UnApprove" class="btn btn-default" />UnApprove
                                        </label>
                                    </div>
                                }
                                else
                                {
                                    <div class="radio radio-primary">
                                        <label>
                                            <input type="radio" name="IsApproved" id="IsApproved" value="Approve" class="btn btn-success" />
                                            Approve
                                        </label>&nbsp;
                                        <label>
                                            <input type="radio" name="IsApproved" id="IsApproved1" autocomplete="off" value="UnApprove" class="btn btn-default" />
                                            UnApprove
                                        </label>
                                    </div>
                                }
                            </div>

                            <div class="col-md-4 form-group">
                                <label>IsRejected</label>
                                @Html.DropDownListFor(model => model.IsRejected, new SelectList(new[] {
                       new { Value = "T", Text = "T"},
                       new { Value="F",Text="F" } },
                       "Value", "Text"), "--Select --", new { required = "required", @class = "form-control" })
                            </div>
                        </div>

                        @*<div class="row">
                            <div class="col-md-8 form-group">
                                <label>Pin</label>
                                @Html.EditorFor(model => model.PIN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>*@

                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary pull-right" id="btnCommand" name="btnCommand" value="Submit">
                        </div>
                    </div>
                }

            </div>
            <!-- End Data Show in Table -->

        </div>
        <!-- /.col-xs--->
        <!-- End-->

    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
@section scripts {
<script type="text/javascript">
    function edValueKeyPress() {
        var edValue = document.getElementById("BankAccountNumber");
        var str = edValue.value;
        var result = str.substr(0, 3);
        $('#BranchCode').val(result);
    }
    </script>
}
<!-- =============================================== -->

