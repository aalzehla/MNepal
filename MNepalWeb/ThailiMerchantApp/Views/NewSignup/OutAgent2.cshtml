
@{
    ViewBag.Title = "OutAgent2";
}


@model ThailiMerchantApp.Models.MNFundTransfer
<!-- =============================================== -->
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Payment
        <small>Cash Out </small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i> Payment</a></li>
        <li class="active"> Cash Out Agent</li>
    </ol>
</section>
@*<section class="content-header">
        <h1>
            Cash Out
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li class="active">Cash Out</li>
        </ol>
    </section>*@

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        <div class="col-md-8">

            <div class="box box-info">
                <div class="box-header">
                    <h3 class="box-title">Cash Out</h3>
                </div>
                <!-- /.box-header -->

                @using (Html.BeginForm("OutAgent2", "Cash", FormMethod.Post, new { @id = "frmCashOutAgent2" }))
                {
                    <div id="ajaxResponse">
                    </div>

                    <div class="box-body">
                        <!-- /.form-group -->

                        <div class="form-group">
                            <label>Agent Mobile Number</label>
                            <input type="text" id="recipient" name="txtRecipientNo" class="form-control" required title="Please use Recipient Mobile number" maxlength="10" onkeypress="return isNumber(event)" value="@ViewBag.AgentMobileNo" readonly />
                            <label id="check">  </label>
                        </div>

                        <div class="form-group">
                            <label>Customer Mobile Number</label>
                            <input type="text" name="txtSenderMobileNo" class="form-control"  @*required title="Please use Customer Mobile No."*@ id="tdSenderMobileNo" data-target="SenderMobileNo" value="@ViewBag.custuserMobile" readonly />
                        </div>
                        
                        <div class="form-group">
                            <label>Transaction Code</label>
                            <input type="text"  name="txtTransactionCode" class="form-control" @*required title="Please use Transaction Code "*@ maxlength="10" @*onkeypress="return isNumber(event)"*@ id="txtTransactionCode" data-target="txtTransactionCode" value="@ViewBag.transactionCode"readonly />
                            <label id="check">  </label>
                        </div>
                       
                        <div class="form-group">
                                <label>Amount</label>
                                <input type="text" id="amount" name="txtAmount" class="form-control" placeholder="Amount"
                                       required maxlength="6" />
                            </div>

                        <div class="form-group" id="tpin">
                            <label>T-PIN</label>
                            <input type="password" id="pin" name="txtPin" class="form-control" placeholder="T-PIN" pattern=".{4,4}" required title="Please use the T-Pin number" maxlength="4" @*hidden="hidden"*@ onkeypress="return isNumber(event)" />
                        </div>



                        <!-- /.form-group -->
                    </div>
                        <!-- /.box-body -->


                    <div class="box-footer">
                        <input id='btnAccept' type="button" value="Accept" />
                    </div>

                    <div class="box-footer">
                        <input id='btnDeny' type="button" value="Deny" />
                    </div>

                    <div class="box-footer">
                        <input id='btnSubmitCashOut' type="button" value="Confirm" />
                    </div>
                    <div id="AddQuestion"/>

                }
          </div>
    </div>

        <div class="col-md-2"> &nbsp; </div>

    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
<!-- =============================================== -->

@section scripts{
     <!-- Load jQuery and the validate plugin -->
<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

<script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>

     <!--jQuery Form Validation code -->
 <script type="text/javascript">

     function isNumber(evt) {
         evt = (evt) ? evt : window.event;
         var charCode = (evt.which) ? evt.which : evt.keyCode;
         if (charCode > 31 && (charCode < 48 || charCode > 57)) {
             return false;
         }
         return true;
     }

     $(document).ready(function () {
         $("#recipient").change(function (event) {
            event.preventDefault();

            var id = $("#recipient").val();
            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetCheckingUserName", "Customer")',
                data: { "Username": id },
                success: function (data, textStatus) {
                    var markup = data;
                    if (data == "Success") {
                        $("#check").html("");
                        $("#check").css("color", "red");
                        $("#check").html("Number Not Registered").show();
                    }
                    else {
                        $("#check").html("");
                        $("#check").css("color", "green");
                        $("#check").html("Valid Number").show();
                    }
                },
                error: function () {
                    alert("Data Not Found");
                }
            });
        });

         $('#frmCashOutAgent2').bootstrapValidator({
             feedbackIcons: {
                 valid: 'glyphicon glyphicon-ok',
                 invalid: 'glyphicon glyphicon-remove',
                 validating: 'glyphicon glyphicon-refresh'
             },
             fields: {
                 txtTraceID: {
                     validators: {
                         notEmpty: {
                             message: 'The TraceID is required and cannot be empty'
                         }
                     }
                 },
                 txtRecipientNo: {
                     validators: {

                         regexp: {
                             regexp: /^[9][8][0-9]{8}$/,
                             message: 'Input value is not a valid mobile format'
                         },
                         notEmpty: {
                             message: 'The mobile number is required and cannot be empty'
                         }
                     }

                 },
                 //start
                 txtTransactionCode: {
                     validators: {
                         notEmpty: {
                             message: 'The Transaction Code is required and cannot be empty'
                         },
                         stringLength: {
                             max: 6,
                             min: 6,
                             message: 'The Transaction Code must be 6 charactor long'
                         }
                     }
                 },
                 //end
                 txtAmount: {
                     validators: {
                         notEmpty: {
                             message: 'The Amount is required and cannot be empty'
                         },
                         stringLength: {
                             max: 4,
                             min: 2,
                             message: 'The Amount must be more than 2 and less than 4 characters long'
                         }
                     }
                 },
                 txtPin: {
                     validators: {
                         notEmpty: {
                             message: 'The pin is required and cannot be empty'
                         },
                         stringLength: {
                             max: 4,
                             min: 4,
                             message: 'The pin must be more than 4 and less than 4 characters long'
                         }
                     }
                 }
             }
         });
         $("#ajaxResponse").hide();



         $("#btnSubmitCashOut").hide();
         $("#tpin").hide();

         $('#btnAccept').click(function (e) {


             //var servicecode = $("[name='txtServiceCode']").val();

             //var agentrecipientNo = $("[name='txtAgentRecipientNo']").val();
             //var umobile = $("[name='txtCustSenderMobileNo']").val();
             //var trcode = $("[name='txtTransactionCode']").val();

             var amount = $("[name='txtAmount']").val();
             //var pin = $("[name='txtPin']").val();
             //var note = $("[name='txtNote']").val();
             //var src = $("[name='txtSrc']").val();

             if (amount != "") {
                 $("#btnAccept").hide();
                 $("#btnDeny").hide();
                 $("#btnSubmitCashOut").show();
                 $("#tpin").show();
             }
             else {
                 $("#ajaxResponse").html("");
                 $("#ajaxResponse").append("<div class='alert alert-danger'><h4>Error</h4>"
                     + "Please Enter the required Field" + "<br/></div>");
                 $("#ajaxResponse").show();
             }

         });



          $('#btnDeny').click(function (e)
         {
          location.href = '@Url.Content("~/Cash/OutAgent1/")';
         });

         
          @*$('#btnSubmit').click(function (e) {

              var tid = $("[name='txtTraceID']").val();
              var servicecode = $("[name='txtServiceCode']").val();
              var umobile = $("[name='txtSenderMobileNo']").val();
              var recipientNo = $("[name='txtRecipientNo']").val();
              var amount = $("[name='txtAmount']").val();
              var pin = $("[name='txtPin']").val();
              var note = $("[name='txtNote']").val();
              var src = $("[name='txtSrc']").val();

              if ((recipientNo != "") && (amount != "") && (pin != "") && (note != "")) {

                  var dataToPost = {
                      tid: tid,
                      sc: servicecode,
                      mobile: umobile,
                      da: recipientNo,
                      amount: amount,
                      pin: pin,
                      note: note,
                      sourcechannel: src
                  };

                  var y = $('#recipient').val();

                  e.preventDefault(); //prevent the default action

                  if (!(y.charAt(0) == "9" && y.charAt(1) == "8")) {
                      $("#check").html("");
                      $("#check").css("color", "red");
                      $("#check").html("Mobile Number must start with 98").show();
                      $('#recipient').focus();

                  }
                  else {
                      $("#check").html("");
                      $("#check").css("color", "green");
                      $("#check").html("Valid Number").show();
                  }

                  var id = $("#recipient").val();
                  $.ajax({
                      cache: false,
                      type: "GET",
                      url: '@Url.Action("GetCheckingUserName", "Customer")',
                      data: { "Username": id },
                      success: function (data, textStatus) {
                          var markup = data;
                          if (data == "Success") {
                              $("#check").html("");
                              $("#check").css("color", "red");
                              $("#check").html("Number Not Registered").show();
                              $('#recipient').focus();
                              return;

                          }

                      }
                  });





              }

          });*@


        
          $('#btnSubmitCashOut').click(function (e) {

              var recipientNo = $("[name='txtRecipientNo']").val();
              var umobile = $("[name='txtSenderMobileNo']").val();
              var transactionCode = $("[name='txtTransactionCode']").val();
              var amount = $("[name='txtAmount']").val();
              var pin = $("[name='txtPin']").val();

              if ((recipientNo != "") && (transactionCode != "") && (amount != "") && (pin != "") && (umobile != "")) {

                  var dataToPost = {
                      mobile: recipientNo,
                      da: umobile,
                      transactionCode: transactionCode,
                      amount: amount,
                      pin: pin
                  };

                  var y = $('#recipient').val();

                  e.preventDefault(); //prevent the default action

                  $.ajax({
                      url: '@Url.Action("OutAgent2", "Cash")',
                      type: 'POST',
                      data: dataToPost,
                      cache: false,
                      async: false,
                      success: function (data, textStatus, jqXHR) {
                          //alert('success');
                          //alert(data.responseCode);
                          //alert(data.responseText);

                          if ((textStatus == "success") && (data.responseCode == "200")) {
                              $("#ajaxResponse").html("");
                              $("#ajaxResponse").append("<div class='alert alert-success'><h4>Success</h4>"
                                  + data.responseText + "<br/></div>");
                              $("#ajaxResponse").show();
                          }
                          //display error message
                          else {
                              $("#ajaxResponse").html("");
                              $("#ajaxResponse").append("<div class='alert alert-danger'><h4>Error</h4>"
                                  + data.responseText + "<br/></div>");
                              $("#ajaxResponse").show();
                          }
                      },
                      error: function (jqXHR, textStatus, errorThrown) {
                          alert('Failed to retrieve.');
                          $("#ajaxResponse").html(jqXHR.responseText);
                      },
                      //capture the request before it was sent to server
                      beforeSend: function (jqXHR, settings) {
                          //adding some Dummy data to the request
                          settings.data += "&dummyData=whatever";
                          //disable the button until we get the response
                          $('#btnSubmit').attr("disabled", true);
                      },
                      complete: function (jqXHR, textStatus) {
                          //enable the button
                          $('#btnSubmit').attr("disabled", false);
                      }
                  });

              }
              else {
                  $("#ajaxResponse").html("");
                  $("#ajaxResponse").append("<div class='alert alert-danger'><h4>Error</h4>"
                      + "Please Enter the required Field" + "<br/></div>");
                  $("#ajaxResponse").show();
              }

          });



     });

</script>
}