@model ThailiMNepalAgent.ViewModel.CustomerAccountActivityVM
@{
    ViewBag.Title = "Report Agent Activities";
}

<!-- =============================================== -->
<!-- Content Header (Page header) -->

<style>
    .btn {
        border: none;
        outline: none;
        padding: 10px 16px;
        background-color: #f1f1f1;
        cursor: pointer;
        font-size: 18px;
    }
        /* Style the active class, and buttons on mouse-over */
        .active, .btn:hover {
            background-color: #00A651;
            color: white;
        }

    a.disabled {
        pointer-events: none;
        cursor: default;
    }
</style>
<!-- Main content -->
<!-- Main row -->

<div class="main-content">
    <div class="container">
        <div class="pad-50">
            <h2 class="title">Statements</h2>

            @*<span style="color:red">@ViewBag.error</span>*@
            <div class="statement-filter">
                <div class="top-section form-inline">
                    <div class="form-group">
                        <label class="search-label mt-2">Search</label>
                    </div>

                    <div class="form-group search-form-wrapper">
                        <div class="search-form clearfix">
                            @*@Html.TextBoxFor(x => x.Parameter.UserName, new { @class = "form-control", @required = "required", @Id = "UserName", @maxlength = 10, @pattern = "^[9][8][0-9]{8}$", @data_bv_regexp_message = "Mobile Number is not in valid Format", @onkeypress = "return isNumber(event)", @placeholder = "Mobile Numbers/Services", @type = "search" ,@value = "@ViewBag.UserName"})*@
                            <input type="search" class="form-control" id="UserName" name="UserName" onkeypress="return isNumber(event)" value="@ViewBag.UserName" readonly />

                            <button type="submit" id="btnSearch1" name="txtSearch1" disabled="Disabled"><i class="far fa-search"></i></button>

                        </div>
                        <!-- /search-form -->
                    </div>
                    <!-- /form-group -->
                    @*<div class="form-group">
                            <div class="switch-field">
                                <input type="radio" id="switch_left" name="searchSource" value="Bank Account" checked />
                                <label class="form-control" for="switch_left">Bank Account</label>
                                <input type="radio" id="switch_right" name="searchSource" value="Digital Wallet" />
                            <label class="form-control" for="switch_right">Digital Wallet</label>
                            </div>

                        </div>*@

                    <div id="myDIV" class="mt-2">
                        @if (ViewBag.HasBankKYC == "T")
                        {
                            <input type="submit" id="btnSearchBnkAcc" name="txtSearchBnkAcc" value="Bank Account" class="btn active" />
                        }


                        <input type="submit" id="btnSearch" name="txtSearch" value="Digital Wallet" class="btn " />
                    </div>

                    <!-- /form-group -->
                </div>
                <!-- /top-section -->

                <div class="bottom-section clearfix">
                    <div class="cnt-left float-left">
                        <div class="form-inline">
                            <div class="form-group">
                                <select name="Status" id="Status" class="form-control status-select">
                                    <option value="">Status</option>
                                    <option value="Completed">Completed</option>
                                    <option value="Pending" disabled>Pending</option>
                                    <option value="Cancelled" disabled>Cancelled</option>
                                </select>
                            </div>

                            <div class="form-group daterange-wrapper">
                                @*<label>From</label>*@
                                <div class="input-group input-daterange">
                                    <div class="input-group-append">
                                        <span class="input-group-text">From</span>
                                    </div>
                                    @Html.TextBoxFor(x => x.Parameter.StartDate, new { @class = "form-control datepicker-range", @Id = "StartDate", @Required = "required", @placeholder = "DD/MM/YYYY", @readonly = "readonly" })


                                    <div class="input-group-append">
                                        <span class="input-group-text">To</span>
                                    </div>
                                    @Html.TextBoxFor(x => x.Parameter.EndDate, new { @class = "form-control datepicker-range", @Id = "EndDate", @Required = "required", @placeholder = "DD/MM/YYYY", @readonly = "readonly" })

                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /float-left -->

                    <div class="reset-wrapper float-right">
                        @*<a href="#" class="btn btn-grey reset-button" id="clearButton">Reset</a>*@

                        <a href="CusReportNew" class="btn btn-grey reset-button">Reset</a>

                    </div>
                </div>
                @*<span id="message" style="color:red"></span>*@
                <!-- /bottom-section -->
            </div>

            <div class="statement-table table-responsive">

                <div id="data" class="box box-primary">
                    <div class="box-body" id="grid">
                        @*<span class="fa fa-2x fa-file-excel-o pull-right" style="color:green;display:none;" title="To Excel" id="ToExcel"></span>*@

                        <a href="#" role="button" class="fa fa-2x fa-file-excel-o pull-right" style="color:green;display:none;" title="To Excel" id="ToExcel"></a>
                        <table id="SearchResultTable" class="table table-borderless table-striped" style="display:none;">
                            <thead>
                                <tr>
                                    <th>Transaction Id</th>
                                    <th>Date/Time</th>
                                    <th>Details</th>
                                    <th>Debit</th>
                                    <th>Credit</th>
                                    <th>Balance </th>
                                    <th>Type </th>
                                    <th>Status</th>
                                </tr>
                            </thead>


                        </table>
                    </div>
                    <div class="overlay" id="loading" style="display:none;">
                        <i class="fa fa-refresh fa-spin"></i>
                    </div>
                </div>

            </div>
            <!-- table-responsive -->
            @*<div class="pagination-wrapper text-center">
                    <ul class="pagination">
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item"><a class="page-link" href="#">4</a></li>
                    </ul>
                </div>*@
            <!-- /pagination-wrapper -->
        </div>
    </div>
</div>


@*<section class="content">
        <!-- Main row -->
        <div class="row">

            <!-- Start -->
            <div class="col-xs-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Customer Activities</h3>
                    </div>
                        <div class="box-body">
                            <br />
                            <div class="row">
                                <div class="col-md-6">
                                    <span style="color:red">@ViewBag.error</span>
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group">
                                    <div id="MobileNo" class="col-md-4 form-group">
                                        <label>Mobile Number</label>
                                        <div class="input-group">
                                            <div class="input-group-addon">
                                                <i class="glyphicon glyphicon-phone" style="color:royalblue"></i>
                                            </div>
                                            @Html.TextBoxFor(x => x.Parameter.UserName, new { @class = "form-control", @required = "required", @Id = "UserName", @maxlength = 10, @pattern = "^[9][8][0-9]{8}$", @data_bv_regexp_message = "Mobile Number is not in valid Format", @onkeypress = "return isNumber(event)" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <label>From</label>
                                        <div class="input-group">
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar" style="color:red"></i>
                                            </div>
                                            @Html.TextBoxFor(x => x.Parameter.StartDate, new { @class = "form-control", @Id = "StartDate", @Required = "required", @placeholder = "DD/MM/YYYY", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>To</label>
                                        <div class="input-group">
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar" style="color:red"></i>
                                            </div>
                                            @Html.TextBoxFor(x => x.Parameter.EndDate, new { @class = "form-control", @Id = "EndDate", @Required = "required", @placeholder = "DD/MM/YYYY", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                                <span id="message"></span>
                            </div>
                        </div>
                        <div class="box-footer">
                            <input type="submit" class="btn btn-primary" id="btnSearch" name="txtSearch" value="Search" />
                        </div>
                </div>
                <!--/.box -box-danger-->
                <div id="data" class="box box-primary">
                    <div class="box-body" id="grid">
                        <span class="fa fa-2x fa-file-excel-o pull-right" style="color:green;display:none;" title="To Excel" id="ToExcel"></span>
                        <table id="SearchResultTable" class="table table-striped table-bordered" style="display:none;">
                            <thead>
                                <tr>

                                    <th style="width:100px">TranDate</th>
                                    <th style="width:60px">desc1</th>
                                    <th style="width:70px">Debit</th>
                                    <th style="width:60px">Credit</th>
                                    <th style="width:300px">Balance </th>

                                </tr>
                                             </thead>


                        </table>
                    </div>
                    <div class="overlay" id="loading" style="display:none;">
                        <i class="fa fa-refresh fa-spin"></i>
                    </div>
                </div>

            </div>

        </div>
    </section>*@
<!-- /.content -->
<!-- =============================================== -->
@section scripts{

    <script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <link href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">



    <script type="text/javascript">

        $(document).ready(function () {
            var changed = "F";
            $('#UserName, #StartDate, #EndDate').on('input propertychange paste', function () {
                changed = "T";
            });



            var table;
            $('#ToExcel').click(function () {
                var UserName = $('#UserName').val();
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Parachanged = changed;
                $.ajax({
                    url: "@Url.Action("CusReportTableNew", "Statement")",
                    data: {
                        UserName: UserName,
                        StartDate: StartDate,
                        EndDate: EndDate,
                        change: Parachanged,
                        ToExcel: 'T'
                    },
                    type: 'POST',
                    success: function (data) {
                        var url = "@Url.Action("Download", "Statement")";
                        window.location = url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName;
                        /*window.open(url + '?fileGuid=' + data.FileGuid
                           + '&filename=' + data.FileName, '_blank');*/
                    },
                    error: function (data) {

                    }


                });
            });

            $("#clearButton").click(function () {
                $("#UserName").val("");
                $("#StartDate").val("");
                $("#EndDate").val("");

            });

            /////
            var header = document.getElementById("myDIV");
            var btns = header.getElementsByClassName("btn");
            for (var i = 0; i < btns.length; i++) {
                btns[i].addEventListener("click", function () {
                    var current = document.getElementsByClassName("active");
                    current[0].className = current[0].className.replace(" active", "");
                    this.className += " active";
                });
            }
                ////
            $('#btnSearch').click(function () {




                changed = "T";
                var UserName = $('#UserName').val();
                if (UserName.trim().length <= 0)
                {
                    $('#UserName').focus();
                    alertify.error('Please enter mobile number');
                    return;
                }
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Parachanged = changed;
                if ($.fn.DataTable.isDataTable('#SearchResultTable')) {
                    table.destroy();
                }
                $('#loading').show();
                $('#btnSearch').prop("disabled", true);
                table = $('#SearchResultTable').DataTable({
                    "language": {
                        "emptyTable": "Oops! No Record Found."
                    },
                    searching: false,
                    "proccessing": true,
                    "serverSide": true,
                    "aaSorting": [],
                    "ajax": {
                        data: function (d) {
                            d.UserName = UserName;
                            d.StartDate = StartDate;
                            d.EndDate = EndDate;
                            d.change = Parachanged;
                        },
                        url: "@Url.Action("CusReportTableNew", "Statement")",
                        type: 'POST',
                    },
                    "drawCallback": function (settings) {
                        debugger;
                        changed = "F";
                        Parachanged = changed;
                        $('#SearchResultTable').show();
                        if (settings.json.recordsTotal > 0)
                            $('#ToExcel').show();
                        else
                            $('#ToExcel').hide();
                        $('#loading').hide();
                        $('#btnSearch').prop("disabled", false);
                    },
                    "columns": [
                        { "data": "TranId" },
                        { "data": "TimeStamp" },
                        { "data": "Desc1" },
                        { "data": "Debit", "sClass": "text-right" },
                        { "data": "Credit", "sClass": "text-right" },
                        { "data": "Balance", render: $.fn.dataTable.render.number(',', '.', 2, ''), "sClass": "text-right" },


                        { "data": "Type", sorting: false },

                        //{ "data": "Status" }

                        ///start milayako
                        { data: "Status", render: function ( data, type, row ) {
                                  if (data == 'Successful') {

                                      return '<a href=' + data + ' class="disabled"><i class="fa fa-check-circle fa-lg"  style="color: #00A651; margin-left:30px;"></i></a>';

                                           }
                                  else {
                                      return '<a href=' + data + ' class="disabled"><i class="fa fa-times-circle fa-lg"  style="color: red; margin-left:30px; "></i></a>';
                                       }
                        }
                        },
                        //end milayako
                    ],
                    "columnDefs": [{
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7], /* column index */
                        "orderable": false, /* true or false */
                    }]

                });
               //table.columns.adjust();
            });


             $('#btnSearch1').click(function () {
                debugger;
                changed = "T";
                var UserName = $('#UserName').val();
                if (UserName.trim().length <= 0)
                {
                    $('#UserName').focus();
                    alertify.error('Please enter mobile number');
                    return;
                }
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Parachanged = changed;
                if ($.fn.DataTable.isDataTable('#SearchResultTable')) {
                    table.destroy();
                }
                $('#loading').show();
                $('#btnSearch1').prop("disabled", true);
                 table = $('#SearchResultTable').DataTable({
                     "language": {
                         "emptyTable": "Oops! No Record Found."
                     },
                    searching: false,
                    "proccessing": true,
                    "serverSide": true,
                    "aaSorting": [],
                    "ajax": {
                        data: function (d) {
                            d.UserName = UserName;
                            d.StartDate = StartDate;
                            d.EndDate = EndDate;
                            d.change = Parachanged;
                        },
                        url: "@Url.Action("CusReportTableNew", "Statement")",
                        type: 'POST',
                    },
                    "drawCallback": function (settings) {
                        debugger;
                        changed = "F";
                        Parachanged = changed;
                        $('#SearchResultTable').show();
                        if (settings.json.recordsTotal > 0)
                            $('#ToExcel').show();
                        else
                            $('#ToExcel').hide();
                        $('#loading').hide();
                        $('#btnSearch1').prop("disabled", false);
                    },
                    "columns": [
                       { "data": "TranId" },
                       { "data": "TimeStamp" },
                        { "data": "Desc1" },
                        { "data": "Debit" },
                        { "data": "Credit"},
                        { "data": "Balance" },
                        //{ "data": "Digital Wallet" },
                        { "data": "Type"},
                        //{ "data": "Status" }

                        {
                            data: "Status", render: function (data, type, row) {
                                if (data == 'Successful') {

                                    return '<a href=' + data + ' class="disabled"><i class="fa fa-check-circle fa-lg"  style="color: #00A651; margin-left:30px; "></i></a>';

                                }
                                else {
                                    return '<a href=' + data + ' class="disabled"><i class="fa fa-times-circle fa-lg"  style="color: red; margin-left:30px; "></i></a>';
                                }
                            }
                        },
                    ],
                    "columnDefs": [{
                        "targets": [5, 6], /* column index */
                        "orderable": false, /* true or false */
                    }]

                });
               //table.columns.adjust();
            });


            $('#btnSearchBnkAcc').click(function () {
                dispBankBal();
                debugger;
                changed = "T";
                var UserName = $('#UserName').val();
                if (UserName.trim().length <= 0)
                {
                    $('#UserName').focus();
                    alertify.error('Please enter mobile number');
                    return;
                }
                var StartDate = $('#StartDate').val();
                var EndDate = $('#EndDate').val();
                var Parachanged = changed;
                if ($.fn.DataTable.isDataTable('#SearchResultTable')) {
                    table.destroy();
                }
                $('#loading').show();
                $('#btnSearchBnkAcc').prop("disabled", true);
                table = $('#SearchResultTable').DataTable({  
                    "language": {
                        "emptyTable": "Oops! No Record Found."
                    },
                    searching: false,
                    "proccessing": true,
                    "serverSide": true,
                    "aaSorting": [],
                    "ajax": {
                        data: function (d) {
                            d.UserName = UserName;
                            d.StartDate = StartDate;
                            d.EndDate = EndDate;
                            d.change = Parachanged;
                        },
                        url: "@Url.Action("CusReportTableNewBnkAcc", "Statement")",
                        type: 'POST',
                    },
                    "drawCallback": function (settings) {
                        debugger;
                        changed = "F";
                        Parachanged = changed;
                        $('#SearchResultTable').show();
                        if (settings.json.recordsTotal > 0)
                            $('#ToExcel').show();
                        else
                            $('#ToExcel').hide();
                        $('#loading').hide();
                        $('#btnSearchBnkAcc').prop("disabled", false);
                    },
                    "columns": [
                       { "data": "TranId" },
                       { "data": "TimeStamp" },
                        { "data": "Desc1" },
                        { "data": "Debit", "sClass": "text-right"},
                        { "data": "Credit", "sClass": "text-right" },
                        { "data": "Balnc", render: $.fn.dataTable.render.number(',', '.', 2, ''), "sClass": "text-right"},
                      //  { "data": "Digital Wallet" },
                        { "data": "Type"},
                        //{ "data": "Status" }

                        {
                            data: "Status", render: function (data, type, row) {
                                if (data == 'Successful') {

                                    return '<a href=' + data + ' class="disabled"><i class="fa fa-check-circle fa-lg"  style="color: #00A651; margin-left:30px;" ></i></a>';

                                }
                                else {
                                    return '<a href=' + data + ' class="disabled"><i class="fa fa-times-circle fa-lg"  style="color: red; margin-left:30px; "></i></a>';
                                }
                            }
                        },
                    ],
                    "columnDefs": [{
                        "targets": [5, 6], /* column index */
                        "orderable": false, /* true or false */
                    }]

                });
               //table.columns.adjust();
            });

            $('#grid').on("DOMSubtreeModified", function () {
                changed = "F";
            });

            $('input[name=StartDate]').change(function(dateText, instance) {

                    enddate = $.datepicker.parseDate(instance.settings.dateFormat, dateText, instance.settings);
                    enddate.setMonth(enddate.getMonth() + 1);
                    $('#EndDate').datepicker('setDate', enddate);
            });

            $("#StartDate").css("z-index", "1000");
            $("#EndDate").css("z-index", "1000");

            $("#StartDate").datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    // maxDate: new Date,
                    maxDate: new Date()
                    ,
                    changeMonth: true,
                    changeYear: true,
                    onSelect: function (dateText, instance) {
                        $("#EndDate").datepicker("option", "minDate", dateText),
                       changed = "T";

                      enddate = $.datepicker.parseDate(instance.settings.dateFormat, dateText, instance.settings);
                       enddate.setMonth(enddate.getMonth() + 1);
                      $('#EndDate').datepicker('setDate', enddate);

                      var from = $('#EndDate').val().split("/");
                      if (from != "") {
                          var EDate = new Date(from[2], from[1] - 1, from[0]);
                          var to = dateText.split("/");
                          var SDate = new Date(to[2], to[1] - 1, to[0]);;
                          if (SDate > EDate) {
                              $('#EndDate').val("");
                              $('#message').text('End Date cannot be less than Start Date');
                          }
                          else {
                              $('#message').text("");
                          }
                      }
                  },
                    showAnim: "slideDown"
              });
            $("#EndDate").datepicker(
             {
                 dateFormat: 'dd/mm/yy',
                 minDate: $("#StartDate").val(),
                    //maxDate: '-1D',
                  maxDate: new Date() ,
                 changeMonth: true,
                 changeYear: true,
                 onSelect: function (dateText) {
                     changed = "T";
                     var from = $('#StartDate').val().split("/");
                     if (from != "") {
                         var SDate = new Date(from[2], from[1] - 1, from[0]);
                         var to = dateText.split("/");
                         var EDate = new Date(to[2], to[1] - 1, to[0]);;
                         if (EDate < SDate) {
                             debugger;
                             $('#EndDate').val("");
                             $('#message').text('End Date cannot be less than Start Date');
                         }
                         else {
                             $('#message').text("");
                         }
                     }
                 },
                 showAnim: "slideDown"

             });
            $("#EndDate").datepicker('setDate', new Date());



          ///**Validation Check */
          //  $('#CusReportNew').bootstrapValidator({
          //  feedbackIcons: {
          //      valid: 'glyphicon glyphicon-ok',
          //      invalid: 'glyphicon glyphicon-remove',
          //      validating: 'glyphicon glyphicon-refresh'
          //  }
          //  //fields: {
          //  //    UserName: {
          //  //        validators: {
          //  //            stringlength: {
          //  //                min: 10,
          //  //                max: 10,
          //  //                message: 'Please enter valid Mobile No'

          //  //            },
          //  //            regexp: {
          //  //                regexp: //,
          //  //                message: 'Mobile no must start with 98 and should be 10 digits'

          //  //            }
          //  //        }
          //  //    }


          //  //}

          //  });
        });

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    </script>
}

