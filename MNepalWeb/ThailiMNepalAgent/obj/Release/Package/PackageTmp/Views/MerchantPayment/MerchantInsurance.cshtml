

@model ThailiMNepalAgent.Models.MerchantInsurance

@{
    ViewBag.Title = "MerchantInsurance";
    string hasBankKYC = ViewBag.HasBankKYC;

    List<SelectListItem> Type = new List<SelectListItem>();
    Type.Add(new SelectListItem { Text = " Endorsement", Value = " Endorsement" });
    Type.Add(new SelectListItem { Text = "New", Value = "New" });
    Type.Add(new SelectListItem { Text = "Renewal", Value = "Renewal" });

}

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/css/alertify.min.css" />
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/css/themes/default.min.css" />

<link href="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />

<style>
    .field-icon {
        float: right;
        margin-left: -25px;
        margin-top: -32px;
        margin-right: 13px;
        position: relative;
        z-index: 2;
    }
    /*.Rs-icon {
        float: left;
        margin-left: 12px;
        margin-top: -33px;
        color: #666666;
        font-weight: 1;
    }*/
</style>
@*<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>*@

@*<section class="content-header">
        <h1>
            Merchant
            <small>School</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-user"></i> Merchant</a></li>
            <li class="active"> School</li>
        </ol>
    </section>*@

<!-- Main content -->

<div class="main-content">
    <div class="two-colbg">
        <div class="container">
            <div class="row">

                <div class="col-lg-6">
                    <section class="internet-payment pad-50">


                        <div class="top-section">
                            <h2 class="title">Merchant Insurance</h2>
                            <p>Please fill out the details for payment bill.</p>
                        </div>

                        <div class="instant-transactions">
                            <h3 class="title">Other Merchant Payment</h3>
                            <div class="transactions-grid clearfix">
                                <div class="item load-wallet">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantRestaurant", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-restaurant"></i>
                                                <span>Restaurant</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->

                                <div class="item transfer-fund">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantCollege", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-college"></i>
                                                <span>College</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->

                                <div class="item top-up">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantSchool", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-school"></i>
                                                <span>School</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->

                                <div class="item top-up">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantInsurance", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-school"></i>
                                                <span>Insurance</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->
                                <div class="item top-up">
                                        <div class="item-inner">
                                            <a href="@Url.Action("Index", "NEA" )">
                                                <div class="content-inner">
                                                    <i class="thaili-icon-electricity"></i>
                                                    <span>NEA</span>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                    <!-- /item -->
                                    <div class="item top-up">
                                        <div class="item-inner">
                                            <a href="@Url.Action("Index", "Khanepani" )">
                                                <div class="content-inner">
                                                    <i class="thaili-icon-khanepani"></i>
                                                    <span>Khanepani</span>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                    <!-- /item -->
                                    <div class="item top-up">
                                        <div class="item-inner">
                                            <a href="@Url.Action("Index", "NepalWater" )">
                                                <div class="content-inner">
                                                    <i class="thaili-icon-khanepani"></i>
                                                    <span>Nepal Water</span>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                    <!-- /item -->
                            </div>
                        </div>
                        <!-- /instant transactions -->
                    </section>
                    <!-- /internet-payment -->
                </div>

                <div class="col-lg-6 right-form">
                    <section class="content-inner pad-50">


                        @using (Html.BeginForm(new { @id = "MerchantSchoolForm", @class = "form-horizontal", @autocomplete = "off" }))
                        {


                            @Html.AntiForgeryToken()
                            @*   @Html.ValidationSummary(true)*@

                            <div id="ajaxResponse">
                            </div>
                            <!-- Start -->

                            <!-- /.box -->

                            <div class="box box-info">
                                @*<div class="box-header with-border">
                    <h3 class="box-title">Personal Detail</h3>
                </div>*@
                                <!-- /.box-header -->
                                <!--Message-->
                                @if (this.ViewData["merchantpay_messsage"] != null)
                                {
                                    if (this.ViewData["message_class"].ToString() == "success_info")
                                    {
                                        <div class="alert alert-success">
                                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                                            <h4>Success</h4> @this.ViewData["merchantpay_messsage"]
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-danger">
                                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                                            <h4>Error</h4> @this.ViewData["merchantpay_messsage"]
                                        </div>
                                    }
                                }

                                <div class="transfer-order clearfix">
                                    <h3 class="title">Pay from</h3>

                                    <select class="form-control selectpicker transaction-select from col-md-9" id="TransactionMedium" name="TransactionMedium" onmousedown="this.value='';">
                                        <option data-icon="thaili-icon-load-wallet" value="30">Wallet</option>
                                        @if (hasBankKYC.Equals("T"))
                                        {
                                            <option data-icon="thaili-icon-bank" value="33">Bank</option>
                                        }
                                    </select>
                                </div>

                                <div class="box-body">

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.InsuranceName)"> @Html.DisplayNameFor(x => x.InsuranceName) (<span style="color:red">*</span>)</label>

                                                @Html.DropDownListFor(model => model.InsuranceName, new SelectList(ViewBag.Insurance, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "InsuranceName", @placeholder = "First Name" })

                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.Type)"> @Html.DisplayNameFor(x => x.Type) (<span style="color:red">*</span>)</label>

                                                @Html.DropDownListFor(model => model.Type, new SelectList(Type, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "Type" })

                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.MobileNumber)"> @Html.DisplayNameFor(x => x.MobileNumber) (<span style="color:red">*</span>)</label>

                                                @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control", @maxlength = "10", @title = "Please use Customer Mobile number", @placeholder = "Mobile Number", @oninput = "checkValidation()", @onkeypress = "return isNumberKey(event)", @onpaste = "return false" })

                                            </div>
                                            <div class="form-group" id="MobNumber" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.PolicyNumber)"> @Html.DisplayNameFor(x => x.PolicyNumber) (<span style="color:red">*</span>)</label>

                                                @Html.TextBoxFor(x => x.PolicyNumber, new { @class = "form-control", @maxlength = "18", @title = "Please use Policy number", @placeholder = "Policy Number", @oninput = "checkValidation()"@*, @onkeypress = "return noCharacter(event)"*@,
@onpaste = "return false"
})

                                            </div>
                                            <div class="form-group" id="PolicyNo" style="color:red; margin-top:-11px;"></div>
                                        </div>

                                        <div class="col-md-6">
                                            <label for="@Html.NameFor(x=>x.Amount)"> @Html.DisplayNameFor(x => x.Amount) (<span style="color:red">*</span>)</label>
                                            <div class="form-group input-group">
                                                <div class="form-control col-4">NPR.</div>
                                                @*<input class="form-control col-4" id="NRs" type="text" value="NRs." readonly />*@
                                                @Html.TextBoxFor(x => x.Amount, new { @class = "form-control", @title = "Please use Amount", @placeholder = "Amount", @maxlength = "9", @*@onkeypress = "return isNumberKey(event)",*@@oninput = "checkValidation()",
                                                @onkeypress = "return NumberDot(event)",
                                                @autocomplete = "off"
                                            })

                                            </div>
                                            <div class="form-group" id="Amt" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.CustomerName)"> @Html.DisplayNameFor(x => x.CustomerName) (<span style="color:red">*</span>)</label>

                                                @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control text-box single-line", @title = " Please use Customer Name", @placeholder = "Customer Name", @maxlength = "50", @style = "text-transform: capitalize", @oninput = "checkValidation()", @onkeypress = "return isCharKey(event)", @onpaste = "return false" })
                                                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="form-group" id="CustName" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.CustomerAddress)"> @Html.DisplayNameFor(x => x.CustomerAddress) (<span style="color:red">*</span>)</label>

                                                @Html.TextBoxFor(x => x.CustomerAddress, new { @class = "form-control text-box single-line", @title = " Please use Customer Address", @placeholder = "Customer Address", @maxlength = "50", @style = "text-transform: capitalize", @oninput = "checkValidation()", @onkeypress = "return noCharacter(event)", @onpaste = "return false" })
                                                @Html.ValidationMessageFor(model => model.CustomerAddress, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="form-group" id="CustAddress" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.EmailAddress)"> @Html.DisplayNameFor(x => x.EmailAddress)</label>

                                                @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control text-box single-line", @title = " Please use Customer Email Address", @placeholder = "Customer Email Address", @maxlength = "50", @*@style = "text-transform: capitalize",*@ @oninput = "checkValidation()", @*@onkeypress = "return noCharacter(event)",*@@onpaste = "return false"
                                            })
                                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="form-group" id="EmailAdd" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @*@Html.LabelFor(x => x.Remarks)*@
                                                <label for="@Html.NameFor(x=>x.Remarks)"> @Html.DisplayNameFor(x => x.Remarks) (<span style="color:red">*</span>)</label>

                                                @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", @title = "Please insert Remarks", @placeholder = "Remarks", @maxlength = "30", @oninput = "checkValidation()" })

                                            </div>
                                            <div class="form-group" id="Remark" style="color:red; margin-top:-11px;"></div>
                                        </div>

                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.AgentName)"> @Html.DisplayNameFor(x => x.AgentName)</label>

                                                @Html.TextBoxFor(x => x.AgentName, new { @class = "form-control text-box single-line", @title = " Please use Agent Name", @placeholder = "Agent Name", @maxlength = "50", @style = "text-transform: capitalize", @oninput = "checkValidation()", @onkeypress = "return isCharKey(event)", @onpaste = "return false" })
                                                @Html.ValidationMessageFor(model => model.AgentName, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="form-group" id="AgentName" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>



                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.TPin)"> @Html.DisplayNameFor(x => x.TPin) (<span style="color:red">*</span>)</label>

                                                @Html.PasswordFor(x => x.TPin, new { @class = "form-control pwd1", @title = "Please use T-Pin number", @placeholder = "T-Pin", @maxlength = "4", @onkeypress = "return isNumberKey(event)", @oninput = "checkValidation()", @autocomplete = "new-password", @onpaste = "return false" })
                                                <span toggle="#password-field" class="fa fa-fw fa-eye field-icon toggle-password, btnShow1"></span>

                                            </div>
                                            <div class="form-group" id="Pin" style="color:red; margin-top:-11px;"></div>
                                        </div>

                                    </div>
                                    <br />

                                    <div>
                                        <input type="submit" class="btn btn-blue btn-big col-md-5" name="btnCommand" value="Confirm" id="btnSubmit" />

                                        <a href="@Url.Action("MerchantInsurance","MerchantPayment")" class="btn btn-blue btn-big " id="btnNew" title="Begin New Transaction" style="display:none">New Transaction</a>
                                        <input type="button" value="Clear" class="btn btn-default btn-big col-md-5" id="clearButton" />

                                    </div>

                                </div>
                                <!-- /.box -->

                            </div>

                        }

                        <!-- /.content -->

                    </section>
                </div>

            </div>
        </div>
    </div>
</div>


<!-- Success modal -->
<div class="modal fade common-modal" id="successModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="success-icon">
                    <img src="~/Content/assets/img/success-tick.svg" alt="success-tick">
                </div>
                <p class="msg">@*Success!*@</p>
                <span class="msg">Your payment has been confirmed.</span>
                <br /> <br />
                <button type="button" class="btn btn-blue" data-dismiss="modal" style="width:80%">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Failure modal -->
<div class="modal fade common-modal" id="failureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="success-icon">
                    <img src="~/Content/assets/img/denied-cross.svg" alt="denied-cross">
                </div>
                <p style="color: #E31837; font-size: 1.111rem; font-weight: 700;">@*Error!*@</p>
                <span style="color: #E31837; font-size: 1.111rem; font-weight: 700;" id="message"></span>
                <br /> <br />
                <button type="button" class="btn btn-blue" data-dismiss="modal" style="width:80%">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Failure modal session expired -->
<div class="modal fade common-modal" id="failureModalSessionExpired" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="success-icon">
                    <img src="~/Content/assets/img/denied-cross.svg" alt="denied-cross">
                </div>
                <p style="color: #E31837; font-size: 1.111rem; font-weight: 700;">@*Error!*@</p>
                <span style="color: #E31837; font-size: 1.111rem; font-weight: 700;">Session expired. Please login again</span>
                <br /> <br />
                <button type="button" class="btn btn-blue" data-dismiss="modal" style="width:80%">OK</button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <!-- /.content -->
    <!-- =============================================== -->
    <!-- Load jQuery and the validate plugin -->
    @*<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

        <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
        <script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>
        <script src="//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/alertify.min.js"></script>*@

    @*<!-- added for dialog box -->
        <script type="text/javascript" src="assets/js/jquery.js"></script>
        <script type="text/javascript" src="assets/vendor/bootstrap/js/popper.min.js"></script>
        <script type="text/javascript" src="assets/vendor/bootstrap/js/bootstrap.min.js"></script>
        <!-- Bootstrap select -->
        <script type="text/javascript" src="assets/vendor/bootstrap-select/js/bootstrap-select.min.js"></script>
        <!-- Bootstrap Datepicker -->
        <script type="text/javascript" src="assets/vendor/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
        <!-- BX Slider -->
        <script type="text/javascript" src="assets/vendor/bxslider/js/jquery.bxslider.js"></script>
        <!-- Match Height -->
        <script type="text/javascript" src="assets/vendor/matchHeight/jquery.matchHeight.js"></script>
        <!-- jQuery Validation -->
        <script type="text/javascript" src="assets/vendor/jquery-validation/jquery.validate.min.js"></script>
        <!-- custom js -->
        <script type="text/javascript" src="assets/js/main.js"></script>*@
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@



    <script type="text/javascript">

        $(".btnShow1").mousedown(function () {
            $(".pwd1").attr("type", "text");
        });
        $(".btnShow1").on("mouseleave", function () {
            $(".pwd1").attr("type", "password");
        });

         // for decimal amount (Restricts input for the given textbox to the given inputFilter.)
        function setInputFilter(textbox, inputFilter) {
            ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
                textbox.addEventListener(event, function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                });
            });
        }

        setInputFilter(document.getElementById("Amount"), function (value) {
            if (value >= 10000) {
                return /^\d*$/.test(value) && (value === "" || parseInt(value) <= 10000);
            }
            else {
                return /^\d*[.,]?\d{0,2}$/.test(value) && (value === "" || parseInt(value) <= 10000);

            }


        });

        document.getElementById("successModal").onclick = function () {
         var url = '@Url.Action("Index", "AgentDashboard")';
         window.location.href = url;
        };
        document.getElementById("failureModalSessionExpired").onclick = function () {
            debugger;
         var url = '@Url.Action("Index", "LogOut")';
         window.location.href = url;
        };

        $(document).ready(function () {
            $('input#Amount').blur(function (e) {
                var value = parseFloat(e.target.value);
                var newValue = (isNaN(value) ? 0 : value);

                var cleanNum = newValue.toFixed(2);
                $(this).val(cleanNum);
            });
        });

        function isNumberKey(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }

        //allows only alphabets
        function isCharKey(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127) || (charCode > 47 && charCode < 58)) {

                return false;
            }
            return true;
        }

        ///for amount input number and dot only
        function NumberDot(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        function noCharacter(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127)) {
                return false;
            }
            return true;
        }

        function checkValidation() {
            debugger;
        var policyNo = $("[name='PolicyNumber']").val();
        var amount = $("[name='Amount']").val();
        var custName = $("[name='CustomerName']").val();
        var custAddress = $("[name='CustomerAddress']").val();
        var mobNo = $("[name='MobileNumber']").val();
        var email = $("[name='EmailAddress']").val();
        var emailAdd = email.substring(email.length - 4);
        var remarks = $("[name='Remarks']").val();
        var pin = $("[name='TPin']").val();

        if ((policyNo.trim() == "")) {
            $("#PolicyNo ").html("");
            $("#PolicyNo ").append("<small>" + "Please Enter Policy Number" + "</small>");
            $("#PolicyNo ").show();
        }
        else if (policyNo.length < 12) {
            $("#PolicyNo ").html("");
            $("#PolicyNo ").append("<small>" + "Policy Number must be minimum 12 character" + "</small>");
            $("#PolicyNo ").show();
        }
        else {
            $("#PolicyNo ").hide();
        }

        if ((amount.trim() == "") || (amount.trim() == "0.00") || (amount.trim() == "0")) {
            $("#Amt").html("");
            $("#Amt").append("<small>" + "Please Enter valid Amount" + "</small>");
            $("#Amt").show();
        }
        else if (amount < 10) {
            $("#Amt").html("");
            $("#Amt").append("<small>" + "Mimimun amount must be NPR. 10 " + "</small>");
            $("#Amt").show();
        }
        else {
            $("#Amt").hide();
        }

        if (custName.trim() == "") {
            $("#CustName ").html("");
            $("#CustName ").append("<small>" + "Please Enter Customer Name" + "</small>");
            $("#CustName ").show();
        }
        else {
            $("#CustName ").hide();
        }

        if (custAddress.trim() == "") {
            $("#CustAddress").html("");
            $("#CustAddress").append("<small>" + "Please Enter Customer Address" + "</small>");
            $("#CustAddress").show();
        }
        else {
            $("#CustAddress").hide();
        }

        if (mobNo.trim() == "") {
            $("#MobNumber").html("");
            $("#MobNumber").append("<small>" + "Please Enter the Mobile Number" + "</small>");
            $("#MobNumber").show();
        }
        else if ((mobNo.substring(0, 2) != "98")) {
            $("#MobNumber").html("");
            $("#MobNumber").append("<small>" + "Mobile number must start with 98" + "</small>");
            $("#MobNumber").show();
        }
        else if (mobNo.length != 10) {
            $("#MobNumber ").html("");
            $("#MobNumber ").append("<small>" + "Mobile number must be of 10 digits" + "</small>");
            $("#MobNumber ").show();
        }
        else {
            $("#MobNumber").hide();
        }

        //if ((emailAdd.trim() != ".com")) {
        //    $("#EmailAdd").html("");
        //    $("#EmailAdd").append("<small>" + "Please Enter valid Email Address" + "</small>");
        //    $("#EmailAdd").show();

        //}
        //else {
        //    $("#EmailAdd").hide();
        //}

        if (remarks.trim() == "") {
            $("#Remark").html("");
            $("#Remark").append("<small>" + "Please Enter Remarks" + "</small>");
            $("#Remark").show();
        }
        else {
            $("#Remark").hide();
        }

        if (pin.trim() == "") {
            $("#Pin").html("");
            $("#Pin").append("<small>" + "Please Enter the T-Pin" + "</small>");
            $("#Pin").show();
        }
        else if (pin.length != 4) {
            $("#Pin").html("");
            $("#Pin").append("<small>" + "T-Pin must be 4 character long." + "</small>");
            $("#Pin").show();
        }
        else {
            $("#Pin").hide();
        }

    }

        $("#clearButton").click(function () {
            $("#PolicyNumber").val("");
            $("#Amount").val("");
            $("#CustomerName").val("");
            $("#CustomerAddress").val("");
            $("#MobileNumber").val("");
            $("#EmailAddress").val("");
            $("#Remarks").val("");
            $("#AgentName").val("");
            $("#TPin").val("");
            $("#PolicyNo ").hide();
            $("#Amt").hide();
            $("#CustName").hide();
            $("#CustAddress").hide();
            $("#MobNumber").hide();
            $("#EmailAdd").hide();
            $("#Remark").hide();
            $("#Pin").hide();
        });

        $("#ajaxResponse").hide();
        $("#PolicyNo ").hide();
        $("#Amt").hide();
        $("#CustName ").hide();
        $("#CustAddress").hide();
        $("#MobNumber").hide();
        $("#EmailAdd").hide();
        $("#Remark").hide();
        $("#Pin").hide();

        $('#btnSubmit').click(function (e) {
            e.preventDefault();
            debugger;
            var servicecode = $("[name='TransactionMedium']").val();
            var insurancName = $("[name='InsuranceName']").val();
            var policyType = $("[name='Type']").val();
            var policyNo = $("[name='PolicyNumber']").val();
            var amount = $("[name='Amount']").val();
            var custName = $("[name='CustomerName']").val();
            var custAddress = $("[name='CustomerAddress']").val();
            var mobNo = $("[name='MobileNumber']").val();
            var email = $("[name='EmailAddress']").val();
            var remarks = $("[name='Remarks']").val();
            var agentName = $("[name='AgentName']").val();
            var pin = $("[name='TPin']").val();

            var token = $('input[name="__RequestVerificationToken"]').val();

            if ((servicecode != "") && (policyNo != "") && (amount != "") && (amount != 0) && (amount.length != 2)
                && (custName != "") && (custAddress != "") && (mobNo != "") && (mobNo.length == 10) && (remarks != "") && (pin != "")) {

                    var dataToPost = {
                        TransactionMedium: servicecode,
                        InsuranceName : insurancName,
                        Type: policyType,
                        PolicyNumber: policyNo,
                        Amount: amount,
                        CustomerName: custName,
                        CustomerAddress: custAddress,
                        MobileNumber: mobNo,
                        EmailAddress: email,
                        Remarks: remarks,
                        AgentName: agentName,
                        TPin: pin,
                        TokenUnique: token
                    };

                    e.preventDefault(); //prevent the default action
                    $.ajax({
                        url: '@Url.Action("MerchantInsurance", "MerchantPayment")',
                        type: "POST",
                        //data: dataToPost,
                        data: {
                            __RequestVerificationToken: token,
                            merchantInsurance: dataToPost
                        },
                        async: false,
                        success: function (data) {
                            if (data.responseCode == "200") {
                                $("#ajaxResponse").html("");
                                var resp = JSON.parse(data.responseText);
                                $('#successModal').modal("show");

                                //swal(
                                //    'Success', resp.message + 'Available Balance:' + resp.availableBalance, 'success'
                                //)

                                //var AppendText = "<div class='alert alert-success'><h4>Success &nbsp;</h4>";
                                //AppendText = AppendText + resp.message;
                                //AppendText = AppendText + "<br/> Available Balance:" + resp.availableBalance;
                                //AppendText = AppendText + "<br/></div>";
                                // $("#ajaxResponse").append(AppendText);
                                $("#StudentName").val("");
                                $("#Year").val("");
                                $("#RollNumber").val("");
                                $("#BillNumber").val("");
                                $("#Amount").val("");
                                $("#Purpose").val("");
                                $("#TPin").val("");
                                $("#ajaxResponse").show();
                            }

                            else {
                                $("#ajaxResponse").html("");
                                $("#message").html("");
                                $("#message").append(data.responseText);
                                if (data.responseText == "Session expired. Please login again") {
                                    $('#failureModalSessionExpired').modal("show");
                                }
                                else {
                                    $('#failureModal').modal("show");
                                }
                                //$("#ajaxResponse").append("<div class='alert alert-danger'><h4>Error </h4> "
                                //    + data.responseText + "<br/></div>");
                                //$("#ajaxResponse").show();
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert('Failed to retrieve.');
                            //$("#ajaxResponse").html("");
                            //$("#ajaxResponse").append(jqXHR.responseText);
                            //$("#ajaxResponse").show();
                            $("#message").html("");
                            $("#message").append(jqXHR.responseText);
                            $('#failureModal').modal("show");
                        },
                        //capture the request before it was sent to server
                        beforeSend: function (jqXHR, settings) {
                            //adding some Dummy data to the request
                            settings.data += "&dummyData=whatever";
                            //disable the button until we get the response
                            $('#btnSubmit').attr("disabled", true);
                        },
                         complete: function (data) {
                        debugger;
                        //enable the button
                         $('#btnSubmit').attr("disabled", false);

                        //for sending to logout if 3 wrong t-pin attempt
                        if (data.responseJSON.responseText == "Invalid PIN! You have already attempt 3 times with wrong PIN,Please try again after 1 hour") {
                            $("#failureModal").click(function () {
                             debugger;
                            location.href = '@Url.Action("Index", "LogOut")';
                           });
                         }


                        }
                    });

            }
                else {
                    checkValidation();
                    $("#message").html("");
                    $("#message").append("Please Enter the required fields.");
                    $('#failureModal').modal("show");
                    //$("#ajaxResponse").html("");
                    //$("#ajaxResponse").append("<div class='alert alert-danger'><h4>Error</h4>"
                    //    + "Please Enter the required Field" + "<br/></div>");
                    //$("#ajaxResponse").show();
            }
        });

    //$('#MerchantSchoolForm').bootstrapValidator({
    //    feedbackIcons: {
    //        valid: 'glyphicon glyphicon-ok',
    //        invalid: 'glyphicon glyphicon-remove',
    //        validating: 'glyphicon glyphicon-refresh'
    //    },
    //    fields: {
    //        StudentName: {
    //            validators: {
    //                notEmpty: {
    //                    message: 'The Student Name is required and cannot be empty'
    //                },
    //                regexp: {
    //                    regexp: /^[a-zA-Z ]+$/,
    //                    message: 'Your Student Name cannot have numbers or symbols'
    //                }
    //            }
    //        },


    //        BillNumber: {
    //            validators: {
    //                stringLength: {
    //                    max: 10,

    //                    message: 'The BillNumber can have maximum 10 characters'
    //                },
    //                notEmpty: {
    //                    message: 'The Bill Number is required and cannot be empty'
    //                }
    //            }
    //        },

    //        //TransactionMedium: {
    //        //    validators: {
    //        //        notEmpty: {
    //        //            message: 'The Transaction Medium is required and cannot be empty'
    //        //        },
    //        //        regexp: {
    //        //            regexp: /^[a-zA-Z ]+$/,
    //        //            message: 'Your Transaction Medium cannot have numbers or symbols'
    //        //        }
    //        //    }
    //        //},
    //        Class: {
    //            validators: {
    //                notEmpty: {
    //                    message: 'The Class is required and cannot be empty'
    //                },
    //                regexp: {
    //                    regexp: /^[a-zA-Z ]+$/,
    //                    message: 'Your Class cannot have numbers or symbols'
    //                }
    //            }
    //        },
    //        RollNumber: {
    //            validators: {
    //                stringLength: {
    //                    max: 4,
    //                    min: 4,
    //                    message: 'The Roll Number must be 4 digit numeric value'
    //                },
    //                notEmpty: {
    //                    message: 'The Roll Number is required and cannot be empty'
    //                }
    //            }
    //        },
    //        Year: {
    //            validators: {
    //                integer: {
    //                    message: 'The value is not an integer. '
    //                },
    //                notEmpty: {
    //                    message: 'The Year is required and cannot be empty. '
    //                },

    //             regexp: {
    //                    regexp: /^20[0-9]\d$/,
    //                    message: 'Year should be start from 20**'
    //                }
    //            }
    //        },

    //        Month: {
    //            validators: {
    //                notEmpty: {
    //                    message: 'The Month is required and cannot be empty'
    //                },
    //                regexp: {
    //                    regexp: /^[a-zA-Z ]+$/,
    //                    message: 'Your Month cannot have numbers or symbols'
    //                }
    //            }
    //        },
    //        Amount: {
    //            validators: {
    //                integer: {
    //                    message: 'The value is not an integer'
    //                },
    //                notEmpty: {
    //                    message: 'The Amount is required and cannot be empty'
    //                }
    //            }
    //        },
    //        // Purpose: {
    //        //            validators: {
    //        //                 notEmpty: {
    //        //                     message: 'The Purpose is required and cannot be empty'
    //        //                 },
    //        //                 regexp: {
    //        //                     regexp: /^[a-zA-Z ]+$/,
    //        //                     message: 'Your Purpose cannot have numbers or symbols'
    //        //                 }
    //        //             }
    //        // }

    //        TPin: {
    //            validators: {
    //                integer: {
    //                    message: 'The value is not an integer'
    //                },
    //                notEmpty: {
    //                    message: 'The pin is required and cannot be empty'
    //                },
    //                stringLength: {
    //                    max: 4,
    //                    min: 4,
    //                    message: 'The pin must be 4 digit numeric value'
    //                }
    //            }
    //        }
    //    }
    //});

    </script>
}