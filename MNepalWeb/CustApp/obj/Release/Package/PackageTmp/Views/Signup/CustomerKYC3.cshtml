@model CustApp.Models.CustomerSRInfo
@{
    ViewBag.Title = "CustomerKYC3";
    Layout = "";

    string _WebUrl = System.Web.Configuration.WebConfigurationManager.AppSettings["WebAddress"];
    var loginLink = Path.Combine(_WebUrl + "Login/Index");
    var backgroundLink = Path.Combine(_WebUrl + "Content/assets/img/home-bg.png");
    
}
<!-- =============================================== -->
<style>
    .box-header {
        margin-left: 60px;
    }

    .content-header {
        margin-left: 60px;
    }

    #header {
        margin-left: 60px;
    }

    .container-fluid {
        background: #f2f2f2;
       /*background: linear-gradient(to bottom right, #e6b3ff, #ccccff );*/
    }

    .Passport {
        margin-left: 60px;
    }

    .header {
        font-size: large;
    }

    /* The container Checkbox */
    .checkbox {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 22px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default checkbox */
        .checkbox input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .checkbox:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the checkbox is checked, add a orange background */
    .checkbox input:checked ~ .checkmark {
        background-color: #F15A29;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .checkbox input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .checkbox .checkmark:after {
        left: 9px;
        top: 5px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }
    
</style>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>MNepal | Mobile Banking</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    @*///start milayako*@
    <!-- /Google font -->
    <link href="https://fonts.googleapis.com/css?family=Chivo:300,400,700" rel="stylesheet">
    <!-- Custom style -->
    <link href="~/Content/ThaliStyle.css" rel="stylesheet" />
    @*//end milayako*@

    @*<!-- Bootstrap 3.3.7 -->
        <link rel="stylesheet" href="~/Content/bower_components/bootstrap/dist/css/bootstrap.min.css">
        <!-- Font Awesome -->
        <link rel="stylesheet" href="~/Content/bower_components/font-awesome/css/font-awesome.min.css">
        <!-- Ionicons -->
        <link rel="stylesheet" href="~/Content/bower_components/Ionicons/css/ionicons.min.css">
        <!-- Theme style -->
        <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" rel="stylesheet">*@

    <link rel="stylesheet" href="~/Content/dist/css/AdminLTE.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="~/Content/plugins/iCheck/square/blue.css">
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google Font -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    <link href="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />
    <link rel="icon" type="image/ico" href="~/favicon.ico">
</head>
<body class="container-fluid">

    @*<section class="content-header">
            <h1>
                Customer
                <small>Registration</small>
            </h1>

        </section>*@

    <!-- Main content -->
    @*//start milayako*@

    <div class="main-content" @*style="height:900px; width:auto; align-content:center;"*@>
        <div class="hero-bg hero-bg-kyc" style="background-image: url(@backgroundLink);">
            <div class="container">
                <section class="kyc-form-wrapper">
                    <div class="row">
                        <div class="col-lg-6 col-md-5 cnt-left match-height">
                            <div class="content-inner">
                                <a href="@loginLink" class="logo">
                                    <img src="~/Content/assets/img/thaili-logo.svg" alt="thaili-logo" />

                                </a>
                                <!-- /logo -->

                                <div class="kyc-img">
                                    <img src="~/Content/assets/img/kyc-graphic.svg" alt="kyc-graphic" />

                                </div>
                                <!-- /kyc-img -->

                                <div class="nibl-logo">
                                    <img src="~/Content/assets/img/nibl-logo.png" alt="nibl-logo" />

                                </div>
                            </div>
                        </div>
                        <!-- /cnt-left -->
                        <div class="col-lg-6 col-md-7 cnt-right match-height" style="overflow:auto;">
                            <div class="content-inner">
                                <h2 class="bordered-title-below">Location Details</h2>
                                @using (Html.BeginForm("CustomerKYC3", "Signup", FormMethod.Post, new { @id = "CustomerKYC3", @class = "form-horizontal", enctype = "multipart/form-data" }))
                                {
                                    if (this.ViewData["registration_message"] != null)
                                    {
                                        if (this.ViewData["message_class"].ToString() == "success_info")
                                        {
                                            <div class="alert alert-success">
                                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                                <h4>Success</h4> @this.ViewData["registration_message"]
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="alert alert-danger">
                                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                                <h4>Error</h4> @this.ViewData["registration_message"]
                                            </div>
                                        }
                                    }

                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true)


                                    <!-- Start -->

                                    <!-- /.box -->

                                    @Html.Hidden("txtFirstName", Model.FName)
                                    @Html.Hidden("txtMiddleName", Model.MName)
                                    @Html.Hidden("txtLastName", Model.LName)
                                    @Html.Hidden("txtGender", Model.Gender)
                                    @Html.Hidden("txtNationality", Model.Nationality)
                                    @Html.Hidden("DOB", Model.DOB)
                                    @Html.Hidden("BSDateOfBirth", Model.BSDateOfBirth)
                                    //@Html.Hidden("txtDateADBS", Model.DateADBS)
                                    @Html.Hidden("txtCountry", Model.Country)
                                    @Html.Hidden("UserName", Model.UserName)
                                    @Html.Hidden("txtFatherName", Model.FatherName)
                                    @Html.Hidden("txtMotherName", Model.MotherName)
                                    @Html.Hidden("txtGrandFatherName", Model.GrandFatherName)
                                    @Html.Hidden("MaritalStatus", Model.MaritalStatus)
                                    @Html.Hidden("SpouseName", Model.SpouseName)
                                    @Html.Hidden("txtFatherInlawName", Model.FatherInlawName)
                                    @Html.Hidden("txtOccupation", Model.Occupation)
                                    @Html.Hidden("txtEmail", Model.EmailAddress)
                                    @Html.Hidden("txtPanNo", Model.PanNo)
                                    <div class="form-group">
                                        <label class="control-label">Permanent Address @*(<b style="color:red;">*</b>)*@</label>
                                        <input type="text" class="form-control" id="PStreet" name="PStreet" placeholder="Tole/Street/Road" maxlength="45" style="margin-bottom:3px;" onkeypress="return AlphabetComma(event)" onpaste="return false"  />

                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">VDC/Municipality (<b style="color:red;">*</b>)</label>
                                        <input type="text" class="form-control" id="PVDC" name="txtPVDC" placeholder="VDC/Municipality" maxlength="45" style="margin-bottom:3px;"  onpaste="return false"  />

                                    </div>

                                    <div class="form-row">
                                        <div class="form-group col-sm-8">
                                            <label class="control-label">Province (<b style="color:red;">*</b>)</label>
                                            @*@Html.DropDownList("PProvince", ViewBag.PProvince as List<SelectListItem>, "--Select Province--", new { @class = "form-control", @style = "margin-bottom:3px;" })*@
                                            @Html.DropDownList("PProvince", ViewBag.PProvince as List<SelectListItem>, new { @class = "form-control placeholder_Province", @style = "margin-bottom:3px;", @id = "PProvince"})
                                            <input type="text" class="form-control" id="PProvinceText" name="PProvinceText" hidden/>
                                        </div>

                                        <div class="form-group col-sm-4">
                                            <label class="control-label">House No.@*<b style="color:red;">*</b>*@</label>
                                            <input type="text" class="form-control" id="PHouseNo" name="txtPHouseNo" placeholder="House No." maxlength="45" onkeypress="return isNumberKey(event)" style="margin-bottom:3px;"  onpaste="return false" />

                                        </div>
                                    </div>

                                    <div class="form-row">
                                        <div class="form-group col-sm-8">
                                            <label class="control-label">District (<b style="color:red;">*</b>)</label>
                                            @*@Html.DropDownList("PDistrict", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control", @style = "margin-bottom:3px;" })*@

                                            @Html.DropDownList("PDistrict", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control  placeholder_PDistrict", @style = "margin-bottom:3px;" })
                                            <input type="text" class="form-control" id="PDistrictText" name="PDistrictText" hidden />
                                        </div>

                                        <div class="form-group col-sm-4">
                                            <label class="control-label">Ward No. (<b style="color:red;">*</b>)</label>
                                            <input type="text" class="form-control" id="PWardNo" name="txtPWardNo" placeholder="Ward No" maxlength="2" onkeypress="return isNumberKey(event)" style="margin-bottom:3px;"  onpaste="return false"  />

                                        </div>
                                    </div>

                                    <div class="form-group" id="SameAsPermanentShow">
                                        @*<input type="checkbox" id="saveAsPermanent"style="margin-bottom:3px;"> &nbsp;&nbsp;&nbsp; Save  as Permanent*@
                                        <label class="checkbox">
                                            <label class="control-label">Same  as Permanent</label>
                                            <input type="checkbox" id="saveAsPermanentAdd" name="SameAsPermanentAdd" onclick="setCurretAddress()">
                                            <span class="checkmark" id="SameAsPermanentTick"></span>
                                        </label>
                                    </div>




                                    <div class="form-group">
                                        <label class="control-label">Current Address @*(<b style="color:red;">*</b>)*@</label>
                                        <input type="text" class="form-control" id="CStreet" name="CStreet" placeholder="Tole/Street/Road" maxlength="45" style="margin-bottom:3px;" onkeypress="return AlphabetComma(event)" onpaste="return false" />

                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">VDC/Municipality (<b style="color:red;">*</b>)</label>
                                        <input type="text" class="form-control" id="CVDC" name="txtCVDC" placeholder="VDC/Municipality" maxlength="45" style="margin-bottom:3px;"  onpaste="return false" />

                                    </div>

                                    <div class="form-row">
                                        <div class="form-group col-sm-8">
                                            <label class="control-label">Province (<b style="color:red;">*</b>)</label>
                                            
                                            @Html.DropDownList("CProvince", ViewBag.CProvince as List<SelectListItem>, new { @class = "form-control placeholder_Province", @style = "margin-bottom:3px;" })
                                            <input type="text" class="form-control" id="CProvinceText" name="CProvinceText" hidden />
                                        </div>

                                        <div class="form-group col-sm-4">
                                            <label class="control-label">House No.@*<b style="color:red;">*</b>*@</label>
                                            <input type="text" class="form-control" id="CHouseNo" name="txtCHouseNo" placeholder="House No." maxlength="45" onkeypress="return isNumberKey(event)" style="margin-bottom:3px;" onpaste="return false"  />

                                        </div>
                                    </div>

                                    <div class="form-row">
                                        <div class="form-group col-sm-8">
                                            <label class="control-label">District (<b style="color:red;">*</b>)</label>
                                            @Html.DropDownList("CDistrict", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control placeholder_CDistrict", @style = "margin-bottom:3px;" })
                                            <input type="text" class="form-control" id="CDistrictText" name="CDistrictText" hidden />
                                        </div>

                                        <div class="form-group col-sm-4">
                                            <label class="control-label">Ward No. (<b style="color:red;">*</b>)</label>
                                            <input type="text" class="form-control" id="CWardNo" name="txtCWardNo" placeholder="Ward No" maxlength="2" onkeypress="return isNumberKey(event)" style="margin-bottom:3px;"  onpaste="return false" />

                                        </div>
                                    </div>



                                    <div class="btn-wrapper">
                                        <input type="submit" class="btn btn-blue " id="btnSubmit" name="txtSubmit" value="Continue" onmouseover="enableValidation()" />
                                    </div>
                                    @*<div class="btn-wrapper">
                <input type="submit" class="btn btn-blue " id="btnSubmit" name="txtSubmit" value="Continue" />


            </div>*@
                                }
                            </div>
                                </div>
                        <!-- /cnt-right -->
                    </div>
                </section>
                <!-- /kyc-form-wrapper -->
            </div>
        </div>
        <!-- /hero-bg -->
    </div>

    <footer class="footer">
        <div class="container">
            <div class="footer-top">
                <div class="row">
                    <div class="col-lg-4">
                        <a href="@loginLink" class="logo">
                            <img src="~/Content/assets/img/thaili-logo.svg" alt="thaili-logo">
                        </a>
                    </div>

                    <div class="col-lg-8">
                        <ul class="footer-menu">
                            <li>
                                <a href="#">Policy</a>
                                <ul>
                                    <li>@Html.ActionLink("Privacy Policy", "PrivacyPolicy", "PrivacyPolicy")</li>
                                    <li>@Html.ActionLink("Terms and Conditions", "Index", "TermsAndCondition")</li>
                                    <li><a href="#">Report Fraud or Misuse of Account</a></li>
                                </ul>
                            </li>

                            <li>
                                <a href="#">Company</a>
                                <ul>
                                    <li><a href="#">About us</a></li>
                                    <li><a href="#">Career</a></li>
                                    <li><a href="#">Blog/News</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="#">Partners</a>
                                <ul>
                                    <li><a href="#">Banks</a></li>
                                    <li><a href="#">Western Union</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="#">Help</a>
                                <ul>
                                    <li><a href="#">FAQ's</a></li>
                                    <li><a href="#">Contact us</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <!-- /footer-top -->

            <div class="footer-bottom">
                <div class="row align-items-end">
                    <div class="col-md-6">
                        <h5 class="title">Powered by</h5>
                        <a href="#" class="nibl-logo">
                            <img src="~/Content/assets/img/nibl-logo.svg" alt="nibl-logo">
                        </a>
                    </div>

                    <div class="col-md-6 cnt-right text-right">
                        <span class="copyright">Thaili Digital Paisa 2018. All Right Reserved</span><br />
                        @*<span class="crafted-by">Crafted by <a href="http://act360.com.np/" target="_blank">ACT360</a></span>*@
                    </div>
                </div>
            </div>
            <!-- /footer-bottom -->
        </div>
    </footer>

    @*//end milayako*@
   
    <!-- /.content -->
    <!-- =============================================== -->
    <!-- Load jQuery and the validate plugin -->
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.10.2.js"></script>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>

    <!-- jQuery Form Validation code -->

    <script src="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script type="text/javascript">

        function isNumberKey(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 46  && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        function AlphabetComma(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 44) || (charCode > 44 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127) || (charCode > 47 && charCode < 58)) {

                return false;
            }
            return true;
        }

        function enableValidation() {
            $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'CStreet', true);
            $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'txtCVDC', true);
            $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'CProvince', true);
            $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'txtCWardNo', true);
            $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'CDistrict', true);
        }

        //If KYC is rejected
        var hasKYC = "@ViewBag.hasKYC";
        if (hasKYC == "P")
        {
            var PProvince = "@ViewBag.PProvinc";
            var CProvince = "@ViewBag.CProvinc";
            var PDistrict = "@ViewBag.PDistrict";
            var CDistrict = "@ViewBag.CDistrict";

            $('#PVDC').val("@ViewBag.PVDC");
            $('#CVDC').val("@ViewBag.CVDC");
            $('#PProvince').val("@ViewBag.PProvinc");
            $('#CProvince').val("@ViewBag.CProvinc");
            $('#PProvinceText').val("@ViewBag.PProvinc");
            $('#CProvinceText').val("@ViewBag.CProvinc");
            $('#PHouseNo').val("@ViewBag.PHouseNo");
            $('#PWardNo').val("@ViewBag.PWardNo");
            $('#CHouseNo').val("@ViewBag.CHouseNo");
            $('#CWardNo').val("@ViewBag.CWardNo");
            $('#PStreet').val("@ViewBag.PStreet");
            $('#CStreet').val("@ViewBag.CStreet");

            $.ajax({
                type: 'POST',
                url: '@Url.Action("getdistrict")',

                dataType: 'json',

                data: { id: PProvince },


                success: function (districts) {

                    $.each(districts, function (i, district) {
                        $("#PDistrict").append('<option value="' + district.Value + '">' +
                            district.Text + '</option>');
                        $("#PDistrict").val(PDistrict);
                        $("#PDistrictText").val(PDistrict);
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve Province districts.' + ex);
                }
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("getdistrict")',

                dataType: 'json',

                data: { id: CProvince },


                success: function (districts) {

                    $.each(districts, function (i, district) {
                        $("#CDistrict").append('<option value="' + district.Value + '">' +
                            district.Text + '</option>');
                        //debugger;
                        //if (district.Text == CDistrict) {
                        //    var cDistrict = district.Value;
                        //}
                        $("#CDistrict").val(CDistrict);
                        $("#CDistrictText").val(CDistrict);
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve Province districts.' + ex);
                }
            });
        }
         //End reject KYC

        function setCurretAddress() {
            debugger;
            province = $("#PProvince").val();
            district = $("#PDistrict").val();

            if (district == null || province == null) {
                $("input[name ='SameAsPermanentAdd']").prop("disabled", false);
                $("#saveAsPermanentAdd").prop("checked", false);
                return;
            }


                var checkBox = document.getElementById("saveAsPermanentAdd");

                // Get the output text
                var street = $("[name='PStreet']").val();
                var VDC = $("[name='txtPVDC']").val();
                var Province = $("[name='PProvince']").val();
                var houseNo = $("[name='txtPHouseNo']").val();
                var District = $("[name='PDistrict']").val();
                var ward = $("[name='txtPWardNo']").val();

                if (checkBox.checked == true) {

                    $("#CStreet").val(street);
                    $("#CVDC").val(VDC);
                    $("#CProvince").val(Province);
                    $("#CProvinceText").val(Province);
                    $("#CHouseNo").val(houseNo);
                    $("#CWardNo").val(ward);
                    $("#CDistrict").empty();
                    $("#CDistrictText").empty();

                    //for readonly= false when checkbox is not ticked
                    document.getElementById("CStreet").readOnly = true;
                    document.getElementById("CVDC").readOnly = true;
                    document.getElementById("CProvince").disabled = true;
                    document.getElementById("CHouseNo").readOnly = true;
                    document.getElementById("CWardNo").readOnly = true;
                    document.getElementById("CDistrict").disabled = true;
                    document.getElementById("PStreet").readOnly = true;
                    document.getElementById("PVDC").readOnly = true;
                    document.getElementById("PProvince").disabled = true;
                    document.getElementById("PHouseNo").readOnly = true;
                    document.getElementById("PWardNo").readOnly = true;
                    document.getElementById("PDistrict").disabled = true;

                    $(".placeholder_CDistrict").prepend("<option value='' disabled selected>--Select District---</option>");
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("getdistrict")',

                        dataType: 'json',

                        data: { id: $("#CProvince").val() },


                        success: function (districts) {
                            $.each(districts, function (i, district) {
                                $("#CDistrict").append('<option value="' + district.Value + '">' +
                                    district.Text + '</option>');

                                $("#CDistrict").val(District);
                                $("#CDistrictText").val(District);
                            });
                        },
                        error: function (ex) {
                            alert('Failed to retrieve Province districts.' + ex);
                        }
                    });

                    //Disabling the validation
                    $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'CStreet', false);
                    $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'txtCVDC', false);
                    $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'CProvince', false);
                    $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'txtCWardNo', false);
                    $('#CustomerKYC3').bootstrapValidator('enableFieldValidators', 'CDistrict', false);
                    return false;
                }
                else if (checkBox.checked == false) {
                    $('#CStreet, #CHouseNo, #CVDC, #CWardNo, #CProvince, #CDistrict').val('');
                    $('#CProvince').find('option[value="0"]').attr("selected", true);
                    //for readonly= false when checkbox is not ticked
                    document.getElementById("CStreet").readOnly = false;
                    document.getElementById("CVDC").readOnly = false;
                    document.getElementById("CProvince").disabled = false;
                    document.getElementById("CHouseNo").readOnly = false;
                    document.getElementById("CWardNo").readOnly = false;
                    document.getElementById("CDistrict").disabled = false;
                    document.getElementById("PStreet").readOnly = false;
                    document.getElementById("PVDC").readOnly = false;
                    document.getElementById("PProvince").disabled = false;
                    document.getElementById("PHouseNo").readOnly = false;
                    document.getElementById("PWardNo").readOnly = false;
                    document.getElementById("PDistrict").disabled = false;
                }
        }

        $(function () {
            $(".date-picker").datepicker({
                dateFormat: 'dd/mm/yy',
                yearRange: "-100:+0",
                changeMonth: true,
                changeYear: true,

                maxDate: new Date
            });

        });

        $(document).ready(function () {

            ///for plaeholder for province and district
            var hasKYC = "@ViewBag.hasKYC";
            if (hasKYC == "P") {
                $(".placeholder_Province").prepend("<option value='0' disabled>--Select Province---</option>");
                $(".placeholder_District").prepend("<option value='' disabled>--Select District---</option>");
            }
            else
            {
                $(".placeholder_Province").prepend("<option value='0' disabled selected>--Select Province---</option>");
                $(".placeholder_PDistrict").prepend("<option value='' disabled selected>--Select District---</option>");
                $(".placeholder_CDistrict").prepend("<option value='' disabled selected>--Select District---</option>");
            }

            var province = "";
            var district = "";

             $("#PProvince").change(function () {
                 $("#PDistrict").empty();
                 $(".placeholder_PDistrict").prepend("<option value='' disabled selected>--Select District---</option>");
                 debugger;
                 province = $("#PProvince").val();
                 $('#PProvinceText').val(province);
                 if (province != "") {
                     $("input[name ='SameAsPermanentAdd']").prop("disabled", false);
                 }

                 $.ajax({
                     type: 'POST',
                     url: '@Url.Action("getdistrict")',

                     dataType: 'json',

                     data: { id: $("#PProvince").val() },


                     success: function (districts) {


                         $.each(districts, function (i, district) {
                             $("#PDistrict").append('<option value="' + district.Value + '">' +
                                 district.Text + '</option>');

                         });
                     },
                     error: function (ex) {
                         alert('Failed to retrieve Province districts.' + ex);
                     }
                 });
                 return false;
             });

            $("#CProvince").change(function () {
                $("#CDistrict").empty();
                $(".placeholder_CDistrict").prepend("<option value='' disabled selected>--Select District---</option>");
                province = $("#CProvince").val();
                $('#CProvinceText').val(province);
                 $.ajax({
                     type: 'POST',
                     url: '@Url.Action("getdistrict")',

                     dataType: 'json',

                     data: { id: $("#CProvince").val() },


                     success: function (districts) {

                         $.each(districts, function (i, district) {
                             $("#CDistrict").append('<option value="' + district.Value + '">' +
                                 district.Text + '</option>');

                         });
                     },
                     error: function (ex) {
                         alert('Failed to retrieve Province districts.' + ex);
                     }
                 });
                 return false;
            });

            $("#PDistrict").change(function () {
                debugger;
                district = $("#PDistrict").val();
                $('#PDistrictText').val(district);
                if (district != null) {
                    $("input[name ='SameAsPermanentAdd']").prop("disabled", false);
                }
            });
            $("#CDistrict").change(function () {
                debugger;
                district = $("#CDistrict").val();
                $('#CDistrictText').val(district);
            });
        });

        $('#CustomerKYC3')
        .bootstrapValidator(
            {
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                //CStreet: {
                //    validators: {
                //        notEmpty: {
                //            message: 'The Tole / Street / Road is required and cannot be empty'
                //        }
                //        //regexp: {
                //        //    regexp: /^[a-zA-Z ]+$/,
                //        //    message: 'VDC/Municipality cannot have numbers or symbols'
                //        //}
                //    }

                //},

                txtCVDC: {
                    validators: {
                        notEmpty: {
                            message: 'The VDC/Municipality is required and cannot be empty'
                        }
                        //regexp: {
                        //    regexp: /^[a-zA-Z ]+$/,
                        //    message: 'VDC/Municipality cannot have numbers or symbols'
                        //}
                    }
                },

                CProvince: {
                    validators: {
                        notEmpty: {
                            message: 'The Province is required and cannot be empty'
                        }
                    }
                },

                CDistrict: {
                    validators: {
                        notEmpty: {
                            message: 'The District is required and cannot be empty'
                        }
                        //regexp: {
                            //regexp: /^[a-zA-Z ]+$/,
                            //message: 'District name cannot have numbers or symbols'
                        //}
                    }
                },


                //txtCHouseNo: {
                //    validators: {
                //        notEmpty: {
                //            message: 'The House No. is required and cannot be empty'
                //        }

                //    }
                //},
                txtCWardNo: {
                    validators: {
                        notEmpty: {
                            message: 'The Ward No is required and cannot be empty'
                        }
                    }
                },

                //PStreet: {
                //    validators: {
                //        notEmpty: {
                //            message: 'The Tole / Street / Road is required and cannot be empty'
                //        }
                //        //regexp: {
                //        //    regexp: /^[a-zA-Z ]+$/,
                //        //    message: 'VDC/Municipality cannot have numbers or symbols'
                //        //}
                //    }
                //},

                txtPVDC: {
                    validators: {
                        notEmpty: {
                            message: 'The VDC/Municipality is required and cannot be empty'
                        }
                        //regexp: {
                        //    regexp: /^[a-zA-Z ]+$/,
                        //    message: 'VDC/Municipality cannot have numbers or symbols'
                        //}
                    }
                },

                PProvince: {
                    validators: {
                        notEmpty: {
                            message: 'The Province is required and cannot be empty'
                        }
                    }
                },

                PDistrict: {
                    validators: {
                        notEmpty: {
                            message: 'The District is required and cannot be empty'
                        }
                        //regexp: {
                          //  regexp: /^[a-zA-Z ]+$/,
                          //  message: 'District name cannot have numbers or symbols'
                        //}
                    }
                },


                //txtPHouseNo: {
                //    validators: {
                //        notEmpty: {
                //            message: 'The House No. is required and cannot be empty'
                //        }

                //    }
                //},
                txtPWardNo: {
                    validators: {
                        notEmpty: {
                            message: 'The Ward No is required and cannot be empty'
                        }
                    }
                }
            }


            });


    </script>

</body>
</html>
<!-- =============================================== -->
