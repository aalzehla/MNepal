

@model CustApp.Models.MerchantSchool

@{
    ViewBag.Title = "MerchantSchool";
    string hasBankKYC = ViewBag.HasBankKYC;
    //List<SelectListItem> SchoolName = new List<SelectListItem>();
    ////SchoolName.Add(new SelectListItem { Text = "--Select SchoolName--", Value = "SelectSchoolName", Disabled = true });
    //SchoolName.Add(new SelectListItem { Text = "Galaxy Public School", Value = "5" });
    //SchoolName.Add(new SelectListItem { Text = "KasthamandapVidyalaya", Value = "4" });

    List<SelectListItem> Class = new List<SelectListItem>();
    Class.Add(new SelectListItem { Text = "One", Value = "One" });
    Class.Add(new SelectListItem { Text = "Two", Value = "Two" });
    Class.Add(new SelectListItem { Text = "Three", Value = "Three" });
    Class.Add(new SelectListItem { Text = "Four", Value = "Four" });
    Class.Add(new SelectListItem { Text = "Five", Value = "Five" });
    Class.Add(new SelectListItem { Text = "Six", Value = "Six" });
    Class.Add(new SelectListItem { Text = "Seven", Value = "Seven" });
    Class.Add(new SelectListItem { Text = "Eight", Value = "Eight" });
    Class.Add(new SelectListItem { Text = "Nine", Value = "Nine" });
    Class.Add(new SelectListItem { Text = "Ten", Value = "Ten" });
    Class.Add(new SelectListItem { Text = "Eleven", Value = "Eleven" });
    Class.Add(new SelectListItem { Text = "Twelve", Value = "Twelve" });

    //List<SelectListItem> TransactionMedium = new List<SelectListItem>();
    //TransactionMedium.Add(new SelectListItem { Text = "Wallet", Value = "30" });
    //TransactionMedium.Add(new SelectListItem { Text = "Bank", Value = "33" });

    List<SelectListItem> Month = new List<SelectListItem>();
    Month.Add(new SelectListItem { Text = "January", Value = "January" });
    Month.Add(new SelectListItem { Text = "February", Value = "February" });
    Month.Add(new SelectListItem { Text = "March", Value = "March" });
    Month.Add(new SelectListItem { Text = "April", Value = "April" });
    Month.Add(new SelectListItem { Text = "May", Value = "May" });
    Month.Add(new SelectListItem { Text = "June", Value = "June" });
    Month.Add(new SelectListItem { Text = "July", Value = "July" });
    Month.Add(new SelectListItem { Text = "August", Value = "August" });
    Month.Add(new SelectListItem { Text = "September", Value = "September" });
    Month.Add(new SelectListItem { Text = "October", Value = "October" });
    Month.Add(new SelectListItem { Text = "November", Value = "November" });
    Month.Add(new SelectListItem { Text = "December", Value = "December" });

    List<SelectListItem> Year = new List<SelectListItem>();
    Year.Add(new SelectListItem { Text = ViewBag.Year, Value = ViewBag.Year });
    Year.Add(new SelectListItem { Text = ViewBag.nextYear, Value = ViewBag.nextYear });
}

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/css/alertify.min.css" />
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/css/themes/default.min.css" />

<link href="~/Content/plugins/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />

<style>
    .field-icon {
        float: right;
        margin-left: -25px;
        margin-top: -32px;
        margin-right: 13px;
        position: relative;
        z-index: 2;
    }
    /*.Rs-icon {
        float: left;
        margin-left: 12px;
        margin-top: -33px;
        color: #666666;
        font-weight: 1;
    }*/
</style>
@*<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>*@

@*<section class="content-header">
        <h1>
            Merchant
            <small>School</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-user"></i> Merchant</a></li>
            <li class="active"> School</li>
        </ol>
    </section>*@

<!-- Main content -->

<div class="main-content">
    <div class="two-colbg">
        <div class="container">
            <div class="row">

                <div class="col-lg-6">
                    <section class="internet-payment pad-50">


                        <div class="top-section">
                            <h2 class="title">Merchant School</h2>
                            <p>Please fill out the details for payment bill.</p>
                        </div>

                        <div class="instant-transactions">
                            <h3 class="title">Other Merchant Payment</h3>
                            <div class="transactions-grid clearfix">
                                <div class="item load-wallet">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantRestaurant", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-restaurant"></i>
                                                <span>Restaurant</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->

                                <div class="item transfer-fund">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantCollege", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-college"></i>
                                                <span>College</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->

                                <div class="item top-up">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantSchool", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-school"></i>
                                                <span>School</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->

                                <div class="item top-up">
                                    <div class="item-inner">
                                        <a href="@Url.Action("MerchantInsurance", "MerchantPayment")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-school"></i>
                                                <span>Insurance</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->
                                <div class="item top-up">
                                    <div class="item-inner">
                                        <a href="@Url.Action("Index", "NEA")">
                                            <div class="content-inner">
                                                <i class="thaili-icon-electricity"></i>
                                                <span>NEA</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->
                                <div class="item top-up">
                                    <div class="item-inner">
                                        <a href="@Url.Action("Index", "Khanepani" )">
                                            <div class="content-inner">
                                                <i class="thaili-icon-khanepani"></i>
                                                <span>Khanepani</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->
                                <div class="item top-up">
                                    <div class="item-inner">
                                        <a href="@Url.Action("Index", "NepalWater" )">
                                            <div class="content-inner">
                                                <i class="thaili-icon-khanepani"></i>
                                                <span>Nepal Water</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <!-- /item -->
                            </div>
                        </div>
                        <!-- /instant transactions -->
                    </section>
                    <!-- /internet-payment -->
                </div>

                <div class="col-lg-6 right-form">
                    <section class="content-inner pad-50">


                        @using (Html.BeginForm(new { @id = "MerchantSchoolForm", @class = "form-horizontal", @autocomplete = "off" }))
                        {
                            
                            @Html.AntiForgeryToken()
                            @*  @Html.ValidationSummary(true)*@

                            <div id="ajaxResponse">
                            </div>
                            <!-- Start -->

                            <!-- /.box -->

                            <div class="box box-info">
                                @*<div class="box-header with-border">
                    <h3 class="box-title">Personal Detail</h3>
                </div>*@
                                <!-- /.box-header -->
                                <!--Message-->
                                @if (this.ViewData["merchantpay_messsage"] != null)
                                {
                                    if (this.ViewData["message_class"].ToString() == "success_info")
                                    {
                                        <div class="alert alert-success">
                                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                                            <h4>Success</h4> @this.ViewData["merchantpay_messsage"]
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-danger">
                                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                                            <h4>Error</h4> @this.ViewData["merchantpay_messsage"]
                                        </div>
                                    }
                                }

                                <div class="transfer-order clearfix">
                                    <h3 class="title">Pay from</h3>

                                    <select class="form-control selectpicker transaction-select from col-md-9" id="TransactionMedium" name="TransactionMedium" onmousedown="this.value='';">
                                        <option data-icon="thaili-icon-load-wallet" value="30">Wallet</option>
                                        @if (hasBankKYC.Equals("T"))
                                        {
                                            <option data-icon="thaili-icon-bank" value="33">Bank</option>
                                        }
                                    </select>
                                </div>

                                <div class="box-body">

                                    @*<div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.StudentName)" class="control-label col-md-12"> @Html.DisplayNameFor(x => x.StudentName)<span style="color:red">*</span></label>

                                <div class="col-sm-12">
                                    @Html.TextBoxFor(x => x.StudentName, new { @class = "form-control ", @title = " Please enter Student Name", @placeholder = " Student Name", @maxlength = "50", @style = "text-transform: capitalize" })
                                    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.SchoolName)" class="control-label col-md-12"> @Html.DisplayNameFor(x => x.SchoolName)<span style="color:red">*</span></label>

                                <div class="col-sm-12">
                                    @Html.DropDownListFor(model => model.SchoolName, new SelectList(ViewBag.School, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "SchoolName", @placeholder = "School Name" })
                                </div>
                            </div>
                        </div>


                    </div>
                    <br />*@


                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.StudentName)"> @Html.DisplayNameFor(x => x.StudentName) (<span style="color:red">*</span>)</label>

                                                @Html.TextBoxFor(x => x.StudentName, new { @class = "form-control text-box single-line", @title = " Please use Student Name", @placeholder = "Student Name", @maxlength = "50", @style = "text-transform: capitalize", @oninput = "checkValidation()", @onkeypress = "return isCharKey(event)", @onpaste = "return false" })
                                                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="form-group" id="StudName" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.SchoolName)"> @Html.DisplayNameFor(x => x.SchoolName) (<span style="color:red">*</span>)</label>

                                                @Html.DropDownListFor(model => model.SchoolName, new SelectList(ViewBag.School, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "SchoolName", @placeholder = "School Name" })

                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.Class)"> @Html.DisplayNameFor(x => x.Class) (<span style="color:red">*</span>)</label>

                                                @Html.DropDownListFor(model => model.Class, new SelectList(Class, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "Class" })

                                            </div>
                                        </div>


                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <label for="@Html.NameFor(x=>x.Year)"> @Html.DisplayNameFor(x => x.Year) (<span style="color:red">*</span>)</label>

                                                @*@Html.TextBoxFor(x => x.Year, new { @class = "form-control", @title = "Please use Year", @placeholder = "Year", @maxlength = "4", @onkeypress = "return isNumberKey(event)", @onchange = "checkValidation()" })*@
                                                @Html.DropDownListFor(model => model.Year, new SelectList(Year, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "Year" })

                                            </div>
                                            <div class="form-group" id="yr" style="color:red; margin-top:-11px;"></div>
                                        </div>


                                    </div>
                                    @*<br />*@

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.Month)"> @Html.DisplayNameFor(x => x.Month) (<span style="color:red">*</span>)</label>

                                                @Html.DropDownListFor(model => model.Month, new SelectList(Month, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "Month" })

                                            </div>
                                        </div>


                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <label for="@Html.NameFor(x=>x.RollNumber)"> @Html.DisplayNameFor(x => x.RollNumber) (<span style="color:red">*</span>)</label>

                                                @Html.TextBoxFor(x => x.RollNumber, new { @class = "form-control", @title = "Please use Roll No.", @placeholder = "Roll No. ", @maxlength = "4", @oninput = "checkValidation()", @onpaste = "return false" })

                                            </div>
                                            <div class="form-group" id="RollNo" style="color:red; margin-top:-11px;"></div>
                                        </div>


                                    </div>
                                    @*<br />*@

                                    @*<div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.TransactionMedium)" class="control-label col-md-12"> @Html.DisplayNameFor(x => x.TransactionMedium)<span style="color:red">*</span></label>

                                <div class="col-sm-12">
                                    @Html.DropDownListFor(model => model.TransactionMedium, new SelectList(TransactionMedium, "Value", "Text"), new { @class = "form-control", @required = "required", @style = "width: 100%;", @id = "TransactionMedium" })
                                </div>
                            </div>
                        </div>
                    </div>*@

                                    @*<br />*@

                                    <div class="row">

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.BillNumber)"> @Html.DisplayNameFor(x => x.BillNumber) (<span style="color:red">*</span>)</label>

                                                @Html.TextBoxFor(x => x.BillNumber, new { @class = "form-control", @maxlength = "10", @title = "Please use Bill number", @placeholder = "Bill No.", @oninput = "checkValidation()", @onkeypress = "return noCharacter(event)", @onpaste = "return false" })

                                            </div>
                                            <div class="form-group" id="BillNo" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                        @*<div class="col-md-6">
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.Amount)"> @Html.DisplayNameFor(x => x.Amount)<span style="color:red">*</span></label>
                                    @Html.TextBoxFor(x => x.Amount, new { @class = "form-control", @title = "Please enter Amount", @placeholder = "Amount", @maxlength = "5", @onkeypress = "return isNumberKey(event)", @onchange = "checkValidation()" })
                                <span class="Rs-icon" id="amountRs">NRs.</span>
                                <div id="Amt" style="color:red;"></div>
                            </div>
                        </div>*@

                                        <div class="col-md-6">
                                            <label for="@Html.NameFor(x=>x.Amount)"> @Html.DisplayNameFor(x => x.Amount) (<span style="color:red">*</span>)</label>
                                            <div class="form-group input-group">
                                                <div class="form-control col-4">NPR.</div>
                                                @*<input class="form-control col-4" id="NRs" type="text" value="NRs." readonly />*@
                                                @Html.TextBoxFor(x => x.Amount, new { @class = "form-control", @title = "Please use Amount", @placeholder = "Amount", @maxlength = "9", @*@onkeypress = "return isNumberKey(event)",*@@oninput = "checkValidation()",
                                                @onkeypress = "return NumberDot(event)",
                                                @autocomplete = "off"
                                            })

                                            </div>
                                            <div class="form-group" id="Amt" style="color:red; margin-top:-11px;"></div>
                                        </div>
                                    </div>
                                    @*<br />*@

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @*@Html.LabelFor(x => x.Remarks)*@
                                                <label for="@Html.NameFor(x=>x.Remarks)"> @Html.DisplayNameFor(x => x.Remarks) (<span style="color:red">*</span>)</label>

                                                @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", @title = "Please insert Remarks", @placeholder = "Remarks", @maxlength = "30", @oninput = "checkValidation()" })

                                            </div>
                                            <div class="form-group" id="Remark" style="color:red; margin-top:-11px;"></div>
                                        </div>

                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="@Html.NameFor(x=>x.TPin)"> @Html.DisplayNameFor(x => x.TPin) (<span style="color:red">*</span>)</label>

                                                @Html.PasswordFor(x => x.TPin, new { @class = "form-control pwd1", @title = "Please use T-Pin number", @placeholder = "T-Pin", @maxlength = "4", @onkeypress = "return isNumberKey(event)", @onchange = "checkValidation()", @autocomplete = "new-password", @onpaste = "return false" })
                                                <span toggle="#password-field" class="fa fa-fw fa-eye field-icon toggle-password, btnShow1"></span>

                                            </div>
                                            <div class="form-group" id="Pin" style="color:red; margin-top:-11px;"></div>
                                        </div>

                                    </div>
                                    <br />


                                    <div>
                                        <input type="submit" class="btn btn-blue btn-big col-md-5" name="btnCommand" value="Confirm" id="btnSubmit" />

                                        <a href="@Url.Action("MerchantSchool","MerchantPayment")" class="btn btn-blue btn-big " id="btnNew" title="Begin New Transaction" style="display:none">New Transaction</a>
                                        <input type="button" value="Clear" class="btn btn-default btn-big col-md-5" id="clearButton" />

                                    </div>

                                </div>
                                <!-- /.box -->

                            </div>

                        }

                        <!-- /.content -->

                    </section>
                </div>

            </div>
        </div>
    </div>
</div>


<!-- Success modal -->
<div class="modal fade common-modal" id="successModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="success-icon">
                    <img src="~/Content/assets/img/success-tick.svg" alt="success-tick">
                </div>
                <p class="msg">@*Success!*@</p>
                <span class="msg">Your payment has been confirmed.</span>
                <br /> <br />
                <button type="button" class="btn btn-blue" data-dismiss="modal" style="width:80%">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Failure modal -->
<div class="modal fade common-modal" id="failureModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="success-icon">
                    <img src="~/Content/assets/img/denied-cross.svg" alt="denied-cross">
                </div>
                <p style="color: #E31837; font-size: 1.111rem; font-weight: 700;">@*Error!*@</p>
                <span style="color: #E31837; font-size: 1.111rem; font-weight: 700;" id="message"></span>
                <br /> <br />
                <button type="button" class="btn btn-blue" data-dismiss="modal" style="width:80%">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Failure modal session expired -->
<div class="modal fade common-modal" id="failureModalSessionExpired" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="success-icon">
                    <img src="~/Content/assets/img/denied-cross.svg" alt="denied-cross">
                </div>
                <p style="color: #E31837; font-size: 1.111rem; font-weight: 700;">@*Error!*@</p>
                <span style="color: #E31837; font-size: 1.111rem; font-weight: 700;">Session expired. Please login again</span>
                <br /> <br />
                <button type="button" class="btn btn-blue" data-dismiss="modal" style="width:80%">OK</button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <!-- /.content -->
    <!-- =============================================== -->
    <!-- Load jQuery and the validate plugin -->
    @*<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

        <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
        <script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>
        <script src="//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/alertify.min.js"></script>*@

    @*<!-- added for dialog box -->
        <script type="text/javascript" src="assets/js/jquery.js"></script>
        <script type="text/javascript" src="assets/vendor/bootstrap/js/popper.min.js"></script>
        <script type="text/javascript" src="assets/vendor/bootstrap/js/bootstrap.min.js"></script>
        <!-- Bootstrap select -->
        <script type="text/javascript" src="assets/vendor/bootstrap-select/js/bootstrap-select.min.js"></script>
        <!-- Bootstrap Datepicker -->
        <script type="text/javascript" src="assets/vendor/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
        <!-- BX Slider -->
        <script type="text/javascript" src="assets/vendor/bxslider/js/jquery.bxslider.js"></script>
        <!-- Match Height -->
        <script type="text/javascript" src="assets/vendor/matchHeight/jquery.matchHeight.js"></script>
        <!-- jQuery Validation -->
        <script type="text/javascript" src="assets/vendor/jquery-validation/jquery.validate.min.js"></script>
        <!-- custom js -->
        <script type="text/javascript" src="assets/js/main.js"></script>*@
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@



    <script type="text/javascript">

        $(".btnShow1").mousedown(function () {
            $(".pwd1").attr("type", "text");
        });
        $(".btnShow1").on("mouseleave", function () {
            $(".pwd1").attr("type", "password");
        });



         // for decimal amount (Restricts input for the given textbox to the given inputFilter.)
        function setInputFilter(textbox, inputFilter) {
            ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
                textbox.addEventListener(event, function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                });
            });
        }

        setInputFilter(document.getElementById("Amount"), function (value) {
            if (value >= 10000) {
                return /^\d*$/.test(value) && (value === "" || parseInt(value) <= 10000);
            }
            else {
                return /^\d*[.,]?\d{0,2}$/.test(value) && (value === "" || parseInt(value) <= 10000);

            }


        });

        document.getElementById("successModal").onclick = function () {
         var url = '@Url.Action("Index", "UserDashboard")';
         window.location.href = url;
        };
        document.getElementById("failureModalSessionExpired").onclick = function () {
            debugger;
         var url = '@Url.Action("Index", "LogOut")';
         window.location.href = url;
        };

         $(document).ready(function () {
            //$('input#Amount').blur(function () {
            //    var num = parseFloat($(this).val());
            //    var cleanNum = num.toFixed(2);
            //    $(this).val(cleanNum);
            //});



        $('input#Amount').blur(function (e) {

                var value = parseFloat(e.target.value);
                var newValue = (isNaN(value) ? 0 : value);

                var cleanNum = newValue.toFixed(2);
            $(this).val(cleanNum);
            });
        });

        function isNumberKey(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }

        //allows only alphabets
        function isCharKey(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127) || (charCode > 47 && charCode < 58)) {

                return false;
            }
            return true;
        }

        ///for amount input number and dot only
        function NumberDot(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        function noCharacter(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127)) {
                return false;
            }
            return true;
        }

    function checkValidation() {
        var schoolname = $("[name='SchoolName']").val();
        var pin = $("[name='TPin']").val();
        var amount = $("[name='Amount']").val();
        var studName = $("[name='StudentName']").val();
        var year = $("[name='Year']").val();
        var rollNo = $("[name='RollNumber']").val();
        var billNo = $("[name='BillNumber']").val();
        var remarks = $("[name='Remarks']").val();

        if (studName.trim() == "") {
            $("#StudName").html("");
            $("#StudName").append("<small>" + "Please Enter Student Name" + "</small>");
            $("#StudName").show();
        }
        else {
            $("#StudName").hide();
        }

        if (rollNo.trim() == "") {
            $("#RollNo").html("");
            $("#RollNo").append("<small>" + "Please Enter the Roll Number" + "</small>");
            $("#RollNo").show();
        }
        else {
            $("#RollNo").hide();
        }
        if ((amount.trim() == "") || (amount.trim() == "0.00") || (amount.trim() == "0")) {
            $("#Amt").html("");
            $("#Amt").append("<small>" + "Please Enter valid Amount" + "</small>");
            $("#Amt").show();
        }
         else if (amount.length < 3) {
            $("#Amt").html("");
            $("#Amt").append("<small>" + "Please Enter three digit value" + "</small>");
            $("#Amt").show();
            }
        else {
            $("#Amt").hide();
        }
        if (billNo.trim() == "") {
            $("#BillNo").html("");
            $("#BillNo").append("<small>" + "Please Enter the Bill Number" + "</small>");
            $("#BillNo").show();
        }
        else {
            $("#BillNo").hide();
        }
        if (pin.trim() == "") {
            $("#Pin").html("");
            $("#Pin").append("<small>" + "Please Enter the T-Pin" + "</small>");
            $("#Pin").show();
        }
        else if (pin.length != 4) {
            $("#Pin").html("");
            $("#Pin").append("<small>" + "T-Pin must be 4 character long." + "</small>");
            $("#Pin").show();
        }
        else {
            $("#Pin").hide();
        }
        if (remarks.trim() == "") {
            $("#Remark").html("");
            $("#Remark").append("<small>" + "Please Enter Remarks" + "</small>");
            $("#Remark").show();
        }
        else {
            $("#Remark").hide();
        }
    }

        //////
        //$("#amountRs").hide();

        //$("#Amount").blur(function () {
        //    if ($(this).val() == '') {
        //        $("#amountRs").hide();
        //        $("#Amount").css("padding-left", "12px");
        //    }
        //    else {
        //        $("#amountRs").show();
        //        $("#Amount").css("padding-left", "50px");
        //    }
        //});
        ////
    $("#clearButton").click(function () {
        $("#StudentName").val("");
        $("#RollNumber").val("");
        $("#BillNumber").val("");
        $("#Amount").val("");
        $("#Remarks").val("");
        $("#TPin").val("");
        $("#StudName").hide();
        $("#yr").hide();
        $("#RollNo").hide();
        $("#BillNo").hide();
        $("#Amt").hide();
        $("#Pin").hide();
        $("#Remark").hide();
    });

    $("#ajaxResponse").hide();
    $("#StudName").hide();
    $("#yr").hide();
    $("#RollNo").hide();
    $("#BillNo").hide();
    $("#Amt").hide();
    $("#Pin").hide();

    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        debugger;
        var servicecode = $("[name='TransactionMedium']").val();
        var schoolname = $("[name='SchoolName']").val();
        var pin = $("[name='TPin']").val();
        var amount = $("[name='Amount']").val();
        var studName = $("[name='StudentName']").val();
        var year = $("[name='Year']").val();
        var rollNo = $("[name='RollNumber']").val();
        var billNo = $("[name='BillNumber']").val();
        var remarks = $("[name='Remarks']").val();
        var month = $("[name='Month']").val();
        var clss = $("[name='Class']").val();

        var token = $('input[name="__RequestVerificationToken"]').val();

        if ((servicecode != "") && (schoolname != "") && (amount != "") && (amount != 0) && (amount.length != 2) && (pin != "") && (studName != "") && (year != "") && (rollNo != "") && (billNo != "") && (remarks != "")) {

                var dataToPost = {
                    TransactionMedium: servicecode,
                    SchoolName: schoolname,
                    StudentName: studName,
                    BillNumber: billNo,
                    Class:clss,
                    Year: year,
                    Month:month,
                    RollNumber: rollNo,
                    Remarks: remarks,
                    amount: amount,
                    TPin: pin,
                    TokenUnique: token
                };

                e.preventDefault(); //prevent the default action
                $.ajax({
                    url: '@Url.Action("MerchantSchool", "MerchantPayment")',
                    type: "POST",
                    //data: dataToPost,
                    data: {
                        __RequestVerificationToken: token,
                        merchantschool: dataToPost
                    },
                    async: false,
                    success: function (data) {
                        if (data.responseCode == "200") {
                            $("#ajaxResponse").html("");
                            var resp = JSON.parse(data.responseText);
                            $('#successModal').modal("show");


                            //swal(
                            //    'Success', resp.message + 'Available Balance:' + resp.availableBalance, 'success'
                            //)

                            //var AppendText = "<div class='alert alert-success'><h4>Success &nbsp;</h4>";
                            //AppendText = AppendText + resp.message;
                            //AppendText = AppendText + "<br/> Available Balance:" + resp.availableBalance;
                            //AppendText = AppendText + "<br/></div>";
                            // $("#ajaxResponse").append(AppendText);
                            $("#StudentName").val("");
                            $("#Year").val("");
                            $("#RollNumber").val("");
                            $("#BillNumber").val("");
                            $("#Amount").val("");
                            $("#Purpose").val("");
                            $("#TPin").val("");
                            $("#ajaxResponse").show();
                            //$('#btnNew').show();
                            //$('#btnSubmit').hide();
                            //$('#clearButton').hide();

                        }

                        else {
                            $("#ajaxResponse").html("");
                            $("#message").html("");
                            $("#message").append(data.responseText);
                            if (data.responseText == "Session expired. Please login again") {
                                $('#failureModalSessionExpired').modal("show");
                            }
                            else {
                                $('#failureModal').modal("show");
                            }
                            //$("#ajaxResponse").append("<div class='alert alert-danger'><h4>Error </h4> "
                            //    + data.responseText + "<br/></div>");
                            //$("#ajaxResponse").show();
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Failed to retrieve.');
                        //$("#ajaxResponse").html("");
                        //$("#ajaxResponse").append(jqXHR.responseText);
                        //$("#ajaxResponse").show();
                        $("#message").html("");
                        $("#message").append(jqXHR.responseText);
                        $('#failureModal').modal("show");
                    },
                    //capture the request before it was sent to server
                    beforeSend: function (jqXHR, settings) {
                        //adding some Dummy data to the request
                        settings.data += "&dummyData=whatever";
                        //disable the button until we get the response
                        $('#btnSubmit').attr("disabled", true);
                    },
                    //complete: function (jqXHR, textStatus) {
                        //enable the button
                     //   $('#btnSubmit').attr("disabled", false);
                   // }

                     complete: function (data) {
                        debugger;



                             $('#btnSubmit').attr("disabled", false);
                        


                        //for sending to logout if 3 wrong t-pin attempt
                        if (data.responseJSON.responseText == "Invalid PIN! You have already attempt 3 times with wrong PIN,Please try again after 1 hour") {
                            $("#failureModal").click(function () {
                                        debugger;
                              location.href = '@Url.Action("Index", "LogOut")';
                            });
                        }

                          
                    }



                });

            }
            else {
                checkValidation();
                $("#message").html("");
                $("#message").append("Please Enter the required fields.");
                $('#failureModal').modal("show");
                //$("#ajaxResponse").html("");
                //$("#ajaxResponse").append("<div class='alert alert-danger'><h4>Error</h4>"
                //    + "Please Enter the required Field" + "<br/></div>");
                //$("#ajaxResponse").show();
            }
        });

    //$('#MerchantSchoolForm').bootstrapValidator({
    //    feedbackIcons: {
    //        valid: 'glyphicon glyphicon-ok',
    //        invalid: 'glyphicon glyphicon-remove',
    //        validating: 'glyphicon glyphicon-refresh'
    //    },
    //    fields: {
    //        StudentName: {
    //            validators: {
    //                notEmpty: {
    //                    message: 'The Student Name is required and cannot be empty'
    //                },
    //                regexp: {
    //                    regexp: /^[a-zA-Z ]+$/,
    //                    message: 'Your Student Name cannot have numbers or symbols'
    //                }
    //            }
    //        },


    //        BillNumber: {
    //            validators: {
    //                stringLength: {
    //                    max: 10,

    //                    message: 'The BillNumber can have maximum 10 characters'
    //                },
    //                notEmpty: {
    //                    message: 'The Bill Number is required and cannot be empty'
    //                }
    //            }
    //        },

    //        //TransactionMedium: {
    //        //    validators: {
    //        //        notEmpty: {
    //        //            message: 'The Transaction Medium is required and cannot be empty'
    //        //        },
    //        //        regexp: {
    //        //            regexp: /^[a-zA-Z ]+$/,
    //        //            message: 'Your Transaction Medium cannot have numbers or symbols'
    //        //        }
    //        //    }
    //        //},
    //        Class: {
    //            validators: {
    //                notEmpty: {
    //                    message: 'The Class is required and cannot be empty'
    //                },
    //                regexp: {
    //                    regexp: /^[a-zA-Z ]+$/,
    //                    message: 'Your Class cannot have numbers or symbols'
    //                }
    //            }
    //        },
    //        RollNumber: {
    //            validators: {
    //                stringLength: {
    //                    max: 4,
    //                    min: 4,
    //                    message: 'The Roll Number must be 4 digit numeric value'
    //                },
    //                notEmpty: {
    //                    message: 'The Roll Number is required and cannot be empty'
    //                }
    //            }
    //        },
    //        Year: {
    //            validators: {
    //                integer: {
    //                    message: 'The value is not an integer. '
    //                },
    //                notEmpty: {
    //                    message: 'The Year is required and cannot be empty. '
    //                },

    //             regexp: {
    //                    regexp: /^20[0-9]\d$/,
    //                    message: 'Year should be start from 20**'
    //                }
    //            }
    //        },

    //        Month: {
    //            validators: {
    //                notEmpty: {
    //                    message: 'The Month is required and cannot be empty'
    //                },
    //                regexp: {
    //                    regexp: /^[a-zA-Z ]+$/,
    //                    message: 'Your Month cannot have numbers or symbols'
    //                }
    //            }
    //        },
    //        Amount: {
    //            validators: {
    //                integer: {
    //                    message: 'The value is not an integer'
    //                },
    //                notEmpty: {
    //                    message: 'The Amount is required and cannot be empty'
    //                }
    //            }
    //        },
    //        // Purpose: {
    //        //            validators: {
    //        //                 notEmpty: {
    //        //                     message: 'The Purpose is required and cannot be empty'
    //        //                 },
    //        //                 regexp: {
    //        //                     regexp: /^[a-zA-Z ]+$/,
    //        //                     message: 'Your Purpose cannot have numbers or symbols'
    //        //                 }
    //        //             }
    //        // }

    //        TPin: {
    //            validators: {
    //                integer: {
    //                    message: 'The value is not an integer'
    //                },
    //                notEmpty: {
    //                    message: 'The pin is required and cannot be empty'
    //                },
    //                stringLength: {
    //                    max: 4,
    //                    min: 4,
    //                    message: 'The pin must be 4 digit numeric value'
    //                }
    //            }
    //        }
    //    }
    //});

    </script>
}